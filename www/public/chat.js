var __assign = function () { return __assign = Object.assign || function (e) { for (var t, n = 1, r = arguments.length; n < r; n++) { t = arguments[n]; for (var i in t) Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i]) } return e }, __assign.apply(this, arguments) }; function __awaiter(s, e, t, n) { function r(i) { return i instanceof t ? i : new t(function (o) { o(i) }) } return new (t || (t = Promise))(function (i, o) { function a(u) { try { l(n.next(u)) } catch (p) { o(p) } } function c(u) { try { l(n.throw(u)) } catch (p) { o(p) } } function l(u) { u.done ? i(u.value) : r(u.value).then(a, c) } l((n = n.apply(s, e || [])).next()) }) } function __generator(s, e) { var t = { label: 0, sent: function () { if (i[0] & 1) throw i[1]; return i[1] }, trys: [], ops: [] }, n, r, i, o = Object.create((typeof Iterator == "function" ? Iterator : Object).prototype); return o.next = a(0), o.throw = a(1), o.return = a(2), typeof Symbol == "function" && (o[Symbol.iterator] = function () { return this }), o; function a(l) { return function (u) { return c([l, u]) } } function c(l) { if (n) throw new TypeError("Generator is already executing."); for (; o && (o = 0, l[0] && (t = 0)), t;)try { if (n = 1, r && (i = l[0] & 2 ? r.return : l[0] ? r.throw || ((i = r.return) && i.call(r), 0) : r.next) && !(i = i.call(r, l[1])).done) return i; switch (r = 0, i && (l = [l[0] & 2, i.value]), l[0]) { case 0: case 1: i = l; break; case 4: return t.label++, { value: l[1], done: !1 }; case 5: t.label++, r = l[1], l = [0]; continue; case 7: l = t.ops.pop(), t.trys.pop(); continue; default: if (i = t.trys, !(i = i.length > 0 && i[i.length - 1]) && (l[0] === 6 || l[0] === 2)) { t = 0; continue } if (l[0] === 3 && (!i || l[1] > i[0] && l[1] < i[3])) { t.label = l[1]; break } if (l[0] === 6 && t.label < i[1]) { t.label = i[1], i = l; break } if (i && t.label < i[2]) { t.label = i[2], t.ops.push(l); break } i[2] && t.ops.pop(), t.trys.pop(); continue }l = e.call(s, t) } catch (u) { l = [6, u], r = 0 } finally { n = i = 0 } if (l[0] & 5) throw l[1]; return { value: l[0] ? l[1] : void 0, done: !0 } } } function __read(s, e) { var t = typeof Symbol == "function" && s[Symbol.iterator]; if (!t) return s; var n = t.call(s), r, i = [], o; try { for (; (e === void 0 || e-- > 0) && !(r = n.next()).done;)i.push(r.value) } catch (a) { o = { error: a } } finally { try { r && !r.done && (t = n.return) && t.call(n) } finally { if (o) throw o.error } } return i } function __spreadArray(s, e, t) { if (t || arguments.length === 2) for (var n = 0, r = e.length, i; n < r; n++)(i || !(n in e)) && (i || (i = Array.prototype.slice.call(e, 0, n)), i[n] = e[n]); return s.concat(i || Array.prototype.slice.call(e)) } typeof SuppressedError == "function" && SuppressedError; var EventEmitter = function () { function s() { this.events = {} } return s.prototype.on = function (e, t) { var n; return ((n = this.events)[e] || (n[e] = [])).push(t), this }, s.prototype.off = function (e, t) { this.events[e] && (this.events[e] = this.events[e].filter(function (n) { return n !== t })) }, s.prototype.emit = function (e) { for (var t = [], n = 1; n < arguments.length; n++)t[n - 1] = arguments[n]; (this.events[e] || []).forEach(function (r) { return r.apply(void 0, __spreadArray([], __read(t), !1)) }) }, s }(), globalEmitter = new EventEmitter; function Base(s) { s || (s = "div"); var e = document.createElement(s), t = new EventEmitter; return { el: e, append: function (n) { return e.appendChild(n.el), this }, text: function (n) { return e.textContent = n, this }, cssClass: function (n) { return e.classList.add(n), this }, on: function (n, r) { t.on(n, r) }, emit: function (n) { for (var r = [], i = 1; i < arguments.length; i++)r[i - 1] = arguments[i]; t.emit.apply(t, __spreadArray([n], __read(r), !1)) } } } var TALKJS_API_PROXY = "https://europe-west4-hp-chat-widget.cloudfunctions.net/talkjs-api-proxy", log = { info: function () { for (var s = [], e = 0; e < arguments.length; e++)s[e] = arguments[e]; console.log.apply(console, __spreadArray([], __read(s), !1)) }, warn: function () { for (var s = [], e = 0; e < arguments.length; e++)s[e] = arguments[e]; console.warn.apply(console, __spreadArray([], __read(s), !1)) }, error: function () { for (var s = [], e = 0; e < arguments.length; e++)s[e] = arguments[e]; console.error.apply(console, __spreadArray([], __read(s), !1)) } }, VIEWS = { CONVERSATIONS: "conversations", CONVERSATION_ITEM: "conversation-item" }, currentSession$1 = null, currentView = VIEWS.CONVERSATION_ITEM, state = { getSessions: function () { return JSON.parse(localStorage.getItem("talkjs-sessions") || "[]") }, getCurrentSession: function () { var s = JSON.parse(localStorage.getItem("talkjs-sessions") || "[]"); return currentSession$1 = currentSession$1 || s[0], currentSession$1 }, setCurrentSession: function (s) { var e = JSON.parse(localStorage.getItem("talkjs-sessions") || "[]"), t = e.findIndex(function (n) { return n.talkjsConversationId === s.talkjsConversationId }); if (t === -1) { e.push(s), currentSession$1 = s, localStorage.setItem("talkjs-sessions", JSON.stringify(e)); return } e[t] = __assign(__assign({}, e[t]), s), currentSession$1 = e[t], localStorage.setItem("talkjs-sessions", JSON.stringify(e)) }, getCurrentView: function () { return currentView }, setCurrentView: function (s) { currentView = s } }, _a, talkjsConversationId = (_a = state.getCurrentSession()) === null || _a === void 0 ? void 0 : _a.talkjsConversationId; globalEmitter.on("set-conversation-id", function (s) { console.log("-- in set-conversation-id", s, talkjsConversationId), talkjsConversationId = s }); function getConversation(s) { return log.info("getConversation", s), fetch("".concat(TALKJS_API_PROXY, "/chat/conversations/").concat(s)).then(function (e) { return e.json() }).then(function (e) { return e?.data }).catch(function (e) { return console.error(e) }) } function createConversation(s) { return fetch("".concat(TALKJS_API_PROXY, "/chat/conversations/").concat(s), { method: "POST", headers: { "Content-Type": "application/json" }, body: JSON.stringify({ participants: ["sample_user_sebastian", localStorage.getItem("talkjs-user-id")] }) }).then(function (e) { return e.json() }).then(function (e) { return e?.data }).catch(function (e) { return console.error(e) }) } function getUser(s) { return __awaiter(this, void 0, void 0, function () { return __generator(this, function (e) { return [2, fetch("".concat(TALKJS_API_PROXY, "/chat/users/").concat(s)).then(function (t) { return t.json() }).then(function (t) { return t?.data }).catch(function (t) { return console.error(t) })] }) }) } function createUser(s) { return __awaiter(this, void 0, void 0, function () { return __generator(this, function (e) { return [2, fetch("".concat(TALKJS_API_PROXY, "/chat/users/").concat(s), { method: "POST", headers: { "Content-Type": "application/json" }, body: JSON.stringify({ id: s, name: "Anonymous", role: "default" }) }).then(function (t) { return t.json() }).then(function (t) { return t?.data }).catch(function (t) { return console.error(t) })] }) }) } function fetchMessages(s) { return __awaiter(this, void 0, void 0, function () { return __generator(this, function (e) { return console.log("FETCHING MESSAGES", s), [2, fetch("".concat(TALKJS_API_PROXY, "/chat/messages/").concat(s)).then(function (t) { return t.json() }).then(function (t) { return t.data ? t.data.reverse() : [] }).catch(function (t) { return console.warn(t), [] })] }) }) } function markRead() { var s = localStorage.getItem("talkjs-user-id"); if (s) return fetch("".concat(TALKJS_API_PROXY, "/chat/users/").concat(s, "/conversations/").concat(talkjsConversationId, "/make-read"), { method: "PATCH", headers: { "Content-Type": "application/json" }, body: JSON.stringify({}) }).then(function (e) { return e.json() }).then(function (e) { var t; return (t = e?.data) !== null && t !== void 0 ? t : [] }).catch(function (e) { return [] }) } var messages = { getUser, fetchMessages, markRead }, isTried = !1; function enable() { isTried || (isTried = !0, Notification.requestPermission().then(function (s) { s === "granted" && log.info("Notification granted") })) } var notifications = { enable }, services = { notifications, messages, state }; function Img(s) { var e = Base("img"); return e.el.src = s, e } function timeAgo(s) { if (!s) return "Today"; var e = Date.now(), t = e - s, n = Math.floor(t / 1e3), r = Math.floor(n / 60), i = Math.floor(r / 60), o = Math.floor(i / 24); if (o === 0) return "Today"; if (o === 1) return "Yesterday"; if (o < 7) return "".concat(o, " days ago"); if (o < 14) return "Last week"; if (o < 30) { var a = Math.floor(o / 7); return "".concat(a, " week").concat(a > 1 ? "s" : "", " ago") } else { var c = new Date(s); return c.toLocaleDateString() } } function styleInject(s, e) { e === void 0 && (e = {}); var t = e.insertAt; if (!(!s || typeof document > "u")) { var n = document.head || document.getElementsByTagName("head")[0], r = document.createElement("style"); r.type = "text/css", t === "top" && n.firstChild ? n.insertBefore(r, n.firstChild) : n.appendChild(r), r.styleSheet ? r.styleSheet.cssText = s : r.appendChild(document.createTextNode(s)) } } var css_248z$f = ".conversation-item-module_base__AUMZd{border:1px solid #f0f0f0;border-radius:10px;color:#555;cursor:pointer;display:flex;flex-direction:column;justify-content:center;margin-bottom:8px;padding:13px 15px;position:relative;text-align:left}.conversation-item-module_base__AUMZd:hover{background-color:#f7f7f7}.conversation-item-module_base__AUMZd:active{background-color:#f0f0f0}.conversation-item-module_title__g6E-y{font-size:14px;font-weight:600}.conversation-item-module_date__uU-y-{font-size:12px;margin-top:2px}.conversation-item-module_arrow__ODuhS{height:20px;opacity:.4;position:absolute;right:15px;transform:rotate(180deg);width:20px}", styles$f = { base: "conversation-item-module_base__AUMZd", title: "conversation-item-module_title__g6E-y", date: "conversation-item-module_date__uU-y-", arrow: "conversation-item-module_arrow__ODuhS" }; styleInject(css_248z$f); var arrowLeftIco = `<?xml version="1.0" encoding="utf-8"?>\r
<!-- Uploaded to: SVG Repo, www.svgrepo.com, Generator: SVG Repo Mixer Tools -->\r
<svg width="800px" height="800px" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">\r
    <path fill-rule="evenodd" clip-rule="evenodd"\r
        d="M11.7071 4.29289C12.0976 4.68342 12.0976 5.31658 11.7071 5.70711L6.41421 11H20C20.5523 11 21 11.4477 21 12C21 12.5523 20.5523 13 20 13H6.41421L11.7071 18.2929C12.0976 18.6834 12.0976 19.3166 11.7071 19.7071C11.3166 20.0976 10.6834 20.0976 10.2929 19.7071L3.29289 12.7071C3.10536 12.5196 3 12.2652 3 12C3 11.7348 3.10536 11.4804 3.29289 11.2929L10.2929 4.29289C10.6834 3.90237 11.3166 3.90237 11.7071 4.29289Z"\r
        fill="#000000" />\r
</svg>`; console.log(arrowLeftIco, "arrowLeftIcoSrc"); var arrowLeftIcoSrc$1 = "data:image/svg+xml;charset=utf-8," + encodeURIComponent(arrowLeftIco); function ConversaitonItem(s) { var e = Base(); e.cssClass(styles$f.base); var t = Base(); t.text(s.title), t.cssClass(styles$f.title), e.append(t); var n = Base(); n.text(s.lastUpdate), n.cssClass(styles$f.date), e.append(n); var r = Img(arrowLeftIcoSrc$1); return r.cssClass(styles$f.arrow), e.append(r), e } var css_248z$e = ".conversations-module_base__y35We{background-color:#fff;bottom:70px;left:20px;margin-right:4px;opacity:0;overflow-y:auto;padding-right:16px;pointer-events:none;position:absolute;right:0;text-align:left;top:70px;transform:translate(-100%);transition:all .16s ease}", styles$e = { base: "conversations-module_base__y35We" }; styleInject(css_248z$e); var css_248z$d = ".title-module_base__NEEMZ{color:#9f9f9f;font-size:12px;margin-bottom:8px}", styles$d = { base: "title-module_base__NEEMZ" }; styleInject(css_248z$d); function ConversationTitle() { var s = Base(); return s.cssClass(styles$d.base), s.text("Continue conversations"), s } function Conversaitons() { var s = Base(); s.cssClass(styles$e.base); var e = ConversationTitle(); s.append(e); function t() { s.el.innerHTML = ""; var n = state.getSessions(), r = n.map(function (i) { var o; return { title: ((o = i?.lastMessage) === null || o === void 0 ? void 0 : o.slice(0, 30)) + "...", lastUpdate: timeAgo(i.timestamp), id: i.talkjsConversationId } }); r.forEach(function (i) { var o = ConversaitonItem(i); s.append(o), o.el.onclick = function () { state.setCurrentView(VIEWS.CONVERSATION_ITEM), globalEmitter.emit("view-chaned", VIEWS.CONVERSATION_ITEM, { id: i.id }) } }) } return globalEmitter.on("view-chaned", function (n) { n === VIEWS.CONVERSATIONS ? (s.el.style.transform = "translateX(0)", s.el.style.opacity = "1", s.el.style.pointerEvents = "auto", t()) : (s.el.style.transform = "translateX(-100%)", s.el.style.opacity = "0", s.el.style.pointerEvents = "none") }), s } var css_248z$c = ".box-module_base__rIwTD{background-color:#fff;border-radius:10px;bottom:20px;box-shadow:0 0 24px 10px #0000000d;display:flex;flex-direction:column;overflow:hidden;position:fixed;right:20px;transform:scale(0);transform-origin:bottom right;transition:transform .16s cubic-bezier(.42,0,.66,1.18);transition:all .16s;will-change:transform;z-index:999;@media screen and (max-width:320px){border-radius:0;bottom:0;left:0;right:0;top:60px;width:100%}}.box-module_x__jYSER{cursor:pointer;font-size:21px;padding:15px 22px;position:absolute;right:0;top:0;user-select:none;z-index:999}.box-module_x__jYSER:hover{opacity:.8}.box-module_x__jYSER:active{transform:scale(.9)}.box-module_expand__rR2uE{cursor:pointer;font-size:18px;padding:4px 8px;position:absolute;right:50px;top:11px;user-select:none;z-index:999;@media screen and (max-width:320px){display:none}}.box-module_expand__rR2uE:hover{opacity:.8}.box-module_expand__rR2uE:active{transform:scale(.9)}", styles$c = { base: "box-module_base__rIwTD", x: "box-module_x__jYSER", expand: "box-module_expand__rR2uE" }; styleInject(css_248z$c); var css_248z$b = ".input-module_base__cBl3g{border:2px solid #008539;border-radius:20px;flex-direction:row;gap:10px;height:40px;justify-content:space-between;margin:16px;opacity:0;padding:3px;transition:all .16s ease-in-out}.input-module_base__cBl3g,.input-module_submit__KkvYI{align-items:center;box-sizing:border-box;display:flex;flex-shrink:0}.input-module_submit__KkvYI{background-color:#008539;border-radius:50%;cursor:pointer;height:30px;justify-content:center;padding:8px;width:30px}.input-module_text__gBlWi{background-color:transparent;border:none;font-size:14px;height:40px;outline:none;padding-left:10px;width:100%}", styles$b = { base: "input-module_base__cBl3g", submit: "input-module_submit__KkvYI", text: "input-module_text__gBlWi" }; styleInject(css_248z$b); var waitForUserAction = function (s) { if (Notification.permission === "granted") { log.info("Notification already granted"), s(null, !0); return } var e = function () { Notification.requestPermission().then(function (t) { t === "granted" ? (log.info("Notification granted after user action"), s(null, !0)) : s(new Error("Notification permission denied")), document.removeEventListener("click", e) }).catch(function (t) { s(t), document.removeEventListener("click", e) }) }; document.addEventListener("click", e) }; function isIOS() { return /iPhone|iPad|iPod/.test(navigator.userAgent) } function getIOSVersion() { var s = navigator.userAgent.match(/OS (\d+)_(\d+)_?(\d+)?/); if (!s) return null; var e = parseInt(s[1], 10) || 0, t = parseInt(s[2], 10) || 0; return { major: e, minor: t } } var iosVersion = getIOSVersion(); (function (s, e, t, n, r, i) { i = e.createElement("script"), i.async = 1, i.src = "https://cdn.talkjs.com/talk.js", e.head.appendChild(i), n = s.Promise, s.Talk = { v: 3, ready: { then: function (o) { if (n) return new n(function (a, c) { t.push([o, a, c]) }); t.push([o]) }, catch: function () { return n && new n }, c: t } } })(window, document, []); var currentSession, currentConversation; window.addEventListener("message", messageListener); function initializeTalkjs() { return __awaiter(this, arguments, void 0, function (s) { function e(h) { var d; h.sender === null && h.isByMe === !1 && (log.info("Yay! New message from the user", h), globalEmitter.emit("system-message", h)), h.senderId === "sample_user_sebastian" && (((d = h.custom) === null || d === void 0 ? void 0 : d.isHandover) === "true" && state.setCurrentSession(__assign(__assign({}, state.getCurrentSession()), { isHandover: !0 })), globalEmitter.emit("bot-message", h)), (!isIOS() || iosVersion && iosVersion.major >= 16) && new Notification("New message from senderName", { body: "messageText" }) } var t, n, r, i, o, a, c, l, u, p, f; return s === void 0 && (s = !1), __generator(this, function (h) { switch (h.label) { case 0: return console.log("initializeTalkjs"), currentSession && (console.log("** currentSession exists", currentSession), currentSession.destroy(), currentConversation = null), [4, Talk.ready]; case 1: return h.sent(), t = new Talk.User({ id: "sample_user_sebastian", name: "Sebastian" }), n = new Talk.User({ id: getTalkJsUserId(), name: "Anonymous", role: "default" }), [4, services.messages.getUser(n.id)]; case 2: return r = h.sent(), r ? [3, 4] : [4, createUser(n.id)]; case 3: i = h.sent(), log.info("user created", i), h.label = 4; case 4: return o = new Talk.Session({ appId: "tNZG7ORR", me: n }), console.log("session created", o), currentSession = o, enableNotifications(currentSession), a = state.getCurrentSession(), console.log("** cs", a), c = s ? "oneOnOne_".concat(n.id, "_").concat(t.id, "_").concat(Math.random().toString(36).substring(2)) : a?.talkjsConversationId || Talk.oneOnOneId(n, t), a || state.setCurrentSession({ talkjsConversationId: c, timestamp: new Date().getTime() }), s && state.setCurrentSession({ talkjsConversationId: c, timestamp: new Date().getTime() }), console.log("** new conversationId", c), l = currentSession.getOrCreateConversation(c), l.setParticipant(n), l.setParticipant(t), [4, getConversation(c)]; case 5: return u = h.sent(), u ? [3, 7] : [4, createConversation(c)]; case 6: p = h.sent(), log.info("conversation created", p), h.label = 7; case 7: return globalEmitter.emit("set-conversation-id", c), currentSession.unreads.onChange(function (d) { handleUnreadMessages(d, c) }), f = currentSession.createChatbox({ showChatHeader: !1, messageField: { visible: !1 } }), f.select(l), currentSession.onMessage(e), currentConversation = l, [2, c] } }) }) } function handleUnreadMessages(s, e) { var t = s.find(function (r) { return r.conversation.id === e }); if (t) { var n = t.unreadMessageCount; n && (globalEmitter.emit("unread-messages", n), (!isIOS() || iosVersion && iosVersion.major >= 16) && new Notification("New message from senderName", { body: "messageText" })) } } function getTalkJsUserId() { var s = localStorage.getItem("talkjs-user-id"); return s || (s = new Date().getTime().toString(), localStorage.setItem("talkjs-user-id", s)), s } function enableNotifications(s) { "Notification" in window && Notification.permission !== "denied" ? (!isIOS() || iosVersion && iosVersion?.major >= 16) && (log.info("Requesting permission for notifications..."), waitForUserAction(function (e) { e ? log.error("Error while waiting for user action:", e) : (log.info("Notifications granted and user clicked on ios!"), s.setDesktopNotificationEnabled(!0)) })) : log.info("Notifications not supported on this iOS version.") } function messageListener(s) { if (s.data && s.data.text && currentConversation) try { currentConversation.sendMessage(s.data.text, { custom: __assign(__assign({}, s.data.custom), { customerId: "some_customer_id" }) }), globalEmitter.emit("user-message", s.data) } catch (e) { console.error("Failed to send message:", e) } } var upArrowIco = `<?xml version="1.0" encoding="iso-8859-1"?>\r
<!-- Uploaded to: SVG Repo, www.svgrepo.com, Generator: SVG Repo Mixer Tools -->\r
<svg fill="#fff" height="800px" width="800px" version="1.1" id="Capa_1" xmlns="http://www.w3.org/2000/svg"\r
	xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 490 490" xml:space="preserve">\r
	<g>\r
		<path d="M437.2,178.7c12.8,12.8,12.8,33.4,0,46.2c-6.4,6.4-14.7,9.6-23.1,9.6s-16.7-3.2-23.1-9.6L277.7,111.5v345.8\r
		c0,18-14.6,32.7-32.7,32.7s-32.7-14.6-32.7-32.7V111.5L99,224.9c-12.8,12.8-33.4,12.8-46.2,0s-12.8-33.4,0-46.2L221.9,9.6\r
		C228,3.4,236.3,0,245,0c8.7,0,17,3.4,23.1,9.6L437.2,178.7z" />\r
	</g>\r
</svg>`, upArrowIcoSrc = "data:image/svg+xml;charset=utf-8," + encodeURIComponent(upArrowIco); function Input() {
    var s = Base(); s.cssClass(styles$b.base); var e = Base("input"); e.cssClass(styles$b.text), e.el.placeholder = "Ask me anything...", e.el.addEventListener("keydown", function (u) { u.key === "Enter" && i() }), s.append(e); var t = Img(upArrowIcoSrc); t.cssClass(styles$b.submit), t.el.onclick = function () { return s.emit("submit") }, t.el.onclick = i, s.append(t); var n = { user: function () { return { anonymousId: function () { var u, p, f, h, d; return (d = (h = (f = (p = (u = window.analytics) === null || u === void 0 ? void 0 : u.user) === null || p === void 0 ? void 0 : p.call(u)) === null || f === void 0 ? void 0 : f.anonymousId) === null || h === void 0 ? void 0 : h.call(f)) !== null && d !== void 0 ? d : "unknown" } } } }, r; function i() { return __awaiter(this, void 0, void 0, function () { var u, p, f; return __generator(this, function (h) { switch (h.label) { case 0: return globalEmitter.emit("cancel-request"), clearTimeout(r), log.info("Input", "handleSubmission"), u = state.getCurrentView(), log.info("currentView", u), u !== VIEWS.CONVERSATIONS ? [3, 2] : [4, initializeTalkjs(!0)]; case 1: p = h.sent(), console.log(">>>> new talkjsConversationId", p), globalEmitter.emit("view-chaned", VIEWS.CONVERSATION_ITEM, { id: p }), h.label = 2; case 2: return f = e.el.value, f.trim() !== "" && (o.push(f.trim()), console.log("> timeout"), globalEmitter.emit("append-unsent-message", f), r = setTimeout(function () { a() }, 2e3 + Math.random() * 2e3), e.el.value = ""), [2] } }) }) } var o = []; function a() {
        console.log("********** postFinalMessage **********"); var u = o.join(`
`), p = services.state.getCurrentSession(), f = p || {}, h = f.engaigeConversationId, d = f.isHandover, g = f.csid; state.setCurrentSession(__assign(__assign({}, p), { lastMessage: u, timeStamp: new Date().getTime() })); var m = { text: u, custom: { customInput: "true", customerId: n.user().anonymousId(), engaigeConversationId: h || "", isHandover: d || "", csid: g || "" } }; log.info("payload sending", m), window.parent.postMessage(m, "*"), o = []
    } function c() { s.el.style.opacity = "1" } function l() { s.el.style.opacity = "0" } return __assign(__assign({}, s), { show: c, hide: l, focus: function () { return e.el.focus() } })
} var css_248z$a = ".mini-profile-module_base__GcIID{align-items:center;background-color:#008539;border-radius:50%;display:flex;height:34px;justify-content:center;overflow:hidden;width:34px}.mini-profile-module_image__e4sQB{margin-top:10%;width:100%}", styles$a = { base: "mini-profile-module_base__GcIID", image: "mini-profile-module_image__e4sQB" }; styleInject(css_248z$a); function MiniProfile() { var s = Base(); s.cssClass(styles$a.base); var e = Img("https://cf-assets.helloprint.com/john.png"); return e.cssClass(styles$a.image), s.append(e), s } var css_248z$9 = ".back-button-module_base__18WlG{cursor:pointer;height:24px;margin-right:14px;transition:all .16s ease;width:24px}.back-button-module_base__18WlG:hover{opacity:.8}.back-button-module_base__18WlG:active{transform:scale(.9)}", styles$9 = { base: "back-button-module_base__18WlG" }; styleInject(css_248z$9); var arrowLeftIcoSrc = "data:image/svg+xml;charset=utf-8," + encodeURIComponent(arrowLeftIco); function BackButton() { var s = Img(arrowLeftIcoSrc); s.cssClass(styles$9.base), globalEmitter.on("view-chaned", e); function e(t) { t === VIEWS.CONVERSATIONS ? (s.el.style.width = "0", s.el.style.marginRight = "0") : (s.el.style.width = "auto", s.el.style.marginRight = "14px") } return s } var css_248z$8 = ".header-module_base__k-ZLn{align-items:center;border-bottom:1px solid #f0f0f0;display:flex;flex-shrink:0;height:56px;justify-content:flex-start;opacity:1;opacity:0;padding-left:16px;transition:all .16s ease;transition-delay:.1s}.header-module_name__t5hIs{color:#191919;font-size:14px;font-weight:600;margin-left:16px}.header-module_show__-wZLg{opacity:1;pointer-events:all}.header-module_hide__5xvA8{opacity:0;pointer-events:none}", styles$8 = { base: "header-module_base__k-ZLn", name: "header-module_name__t5hIs", show: "header-module_show__-wZLg", hide: "header-module_hide__5xvA8" }; styleInject(css_248z$8); function Header() { var s = Base(); s.cssClass(styles$8.base); var e = BackButton(); s.append(e), e.el.onclick = r; var t = MiniProfile(); s.append(t); var n = Base(); n.text("Sebastian"), n.cssClass(styles$8.name), s.append(n), globalEmitter.on("user-message", i), globalEmitter.on("bot-message", i), globalEmitter.on("hide-welcome", i), globalEmitter.on("show-welcome", o); function r() { globalEmitter.emit("view-chaned", VIEWS.CONVERSATIONS), state.setCurrentView(VIEWS.CONVERSATIONS) } function i() { s.el.classList.remove(styles$8.hide), s.cssClass(styles$8.show) } function o() { s.el.classList.remove(styles$8.show), s.cssClass(styles$8.hide) } return __assign(__assign({}, s), { show: i }) } var css_248z$7 = ".messages-module_base__1grrx{height:100%;margin:0 2px 0 0;opacity:0;overflow:auto;padding:40px 12px 100px;transform:translateY(15px) translateX(10px);transition:all .24s ease-in-out}", styles$7 = { base: "messages-module_base__1grrx" }; styleInject(css_248z$7); var css_248z$6 = ".message-module_base__qbGHC{border-radius:20px;box-sizing:border-box;color:#555;font-size:14px;line-height:1.5;margin:8px 0;max-width:300px;width:fit-content}", styles$6 = { base: "message-module_base__qbGHC" }; styleInject(css_248z$6); function _getDefaults() { return { async: !1, breaks: !1, extensions: null, gfm: !0, hooks: null, pedantic: !1, renderer: null, silent: !1, tokenizer: null, walkTokens: null } } let _defaults = _getDefaults(); function changeDefaults(s) { _defaults = s } const noopTest = { exec: () => null }; function edit(s, e = "") { let t = typeof s == "string" ? s : s.source; const n = { replace: (r, i) => { let o = typeof i == "string" ? i : i.source; return o = o.replace(other.caret, "$1"), t = t.replace(r, o), n }, getRegex: () => new RegExp(t, e) }; return n } const other = { codeRemoveIndent: /^(?: {1,4}| {0,3}\t)/gm, outputLinkReplace: /\\([\[\]])/g, indentCodeCompensation: /^(\s+)(?:```)/, beginningSpace: /^\s+/, endingHash: /#$/, startingSpaceChar: /^ /, endingSpaceChar: / $/, nonSpaceChar: /[^ ]/, newLineCharGlobal: /\n/g, tabCharGlobal: /\t/g, multipleSpaceGlobal: /\s+/g, blankLine: /^[ \t]*$/, doubleBlankLine: /\n[ \t]*\n[ \t]*$/, blockquoteStart: /^ {0,3}>/, blockquoteSetextReplace: /\n {0,3}((?:=+|-+) *)(?=\n|$)/g, blockquoteSetextReplace2: /^ {0,3}>[ \t]?/gm, listReplaceTabs: /^\t+/, listReplaceNesting: /^ {1,4}(?=( {4})*[^ ])/g, listIsTask: /^\[[ xX]\] /, listReplaceTask: /^\[[ xX]\] +/, anyLine: /\n.*\n/, hrefBrackets: /^<(.*)>$/, tableDelimiter: /[:|]/, tableAlignChars: /^\||\| *$/g, tableRowBlankLine: /\n[ \t]*$/, tableAlignRight: /^ *-+: *$/, tableAlignCenter: /^ *:-+: *$/, tableAlignLeft: /^ *:-+ *$/, startATag: /^<a /i, endATag: /^<\/a>/i, startPreScriptTag: /^<(pre|code|kbd|script)(\s|>)/i, endPreScriptTag: /^<\/(pre|code|kbd|script)(\s|>)/i, startAngleBracket: /^</, endAngleBracket: />$/, pedanticHrefTitle: /^([^'"]*[^\s])\s+(['"])(.*)\2/, unicodeAlphaNumeric: /[\p{L}\p{N}]/u, escapeTest: /[&<>"']/, escapeReplace: /[&<>"']/g, escapeTestNoEncode: /[<>"']|&(?!(#\d{1,7}|#[Xx][a-fA-F0-9]{1,6}|\w+);)/, escapeReplaceNoEncode: /[<>"']|&(?!(#\d{1,7}|#[Xx][a-fA-F0-9]{1,6}|\w+);)/g, unescapeTest: /&(#(?:\d+)|(?:#x[0-9A-Fa-f]+)|(?:\w+));?/ig, caret: /(^|[^\[])\^/g, percentDecode: /%25/g, findPipe: /\|/g, splitPipe: / \|/, slashPipe: /\\\|/g, carriageReturn: /\r\n|\r/g, spaceLine: /^ +$/gm, notSpaceStart: /^\S*/, endingNewline: /\n$/, listItemRegex: s => new RegExp(`^( {0,3}${s})((?:[	 ][^\\n]*)?(?:\\n|$))`), nextBulletRegex: s => new RegExp(`^ {0,${Math.min(3, s - 1)}}(?:[*+-]|\\d{1,9}[.)])((?:[ 	][^\\n]*)?(?:\\n|$))`), hrRegex: s => new RegExp(`^ {0,${Math.min(3, s - 1)}}((?:- *){3,}|(?:_ *){3,}|(?:\\* *){3,})(?:\\n+|$)`), fencesBeginRegex: s => new RegExp(`^ {0,${Math.min(3, s - 1)}}(?:\`\`\`|~~~)`), headingBeginRegex: s => new RegExp(`^ {0,${Math.min(3, s - 1)}}#`), htmlBeginRegex: s => new RegExp(`^ {0,${Math.min(3, s - 1)}}<(?:[a-z].*>|!--)`, "i") }, newline = /^(?:[ \t]*(?:\n|$))+/, blockCode = /^((?: {4}| {0,3}\t)[^\n]+(?:\n(?:[ \t]*(?:\n|$))*)?)+/, fences = /^ {0,3}(`{3,}(?=[^`\n]*(?:\n|$))|~{3,})([^\n]*)(?:\n|$)(?:|([\s\S]*?)(?:\n|$))(?: {0,3}\1[~`]* *(?=\n|$)|$)/, hr = /^ {0,3}((?:-[\t ]*){3,}|(?:_[ \t]*){3,}|(?:\*[ \t]*){3,})(?:\n+|$)/, heading = /^ {0,3}(#{1,6})(?=\s|$)(.*)(?:\n+|$)/, bullet = /(?:[*+-]|\d{1,9}[.)])/, lheadingCore = /^(?!bull |blockCode|fences|blockquote|heading|html|table)((?:.|\n(?!\s*?\n|bull |blockCode|fences|blockquote|heading|html|table))+?)\n {0,3}(=+|-+) *(?:\n+|$)/, lheading = edit(lheadingCore).replace(/bull/g, bullet).replace(/blockCode/g, /(?: {4}| {0,3}\t)/).replace(/fences/g, / {0,3}(?:`{3,}|~{3,})/).replace(/blockquote/g, / {0,3}>/).replace(/heading/g, / {0,3}#{1,6}/).replace(/html/g, / {0,3}<[^\n>]+>\n/).replace(/\|table/g, "").getRegex(), lheadingGfm = edit(lheadingCore).replace(/bull/g, bullet).replace(/blockCode/g, /(?: {4}| {0,3}\t)/).replace(/fences/g, / {0,3}(?:`{3,}|~{3,})/).replace(/blockquote/g, / {0,3}>/).replace(/heading/g, / {0,3}#{1,6}/).replace(/html/g, / {0,3}<[^\n>]+>\n/).replace(/table/g, / {0,3}\|?(?:[:\- ]*\|)+[\:\- ]*\n/).getRegex(), _paragraph = /^([^\n]+(?:\n(?!hr|heading|lheading|blockquote|fences|list|html|table| +\n)[^\n]+)*)/, blockText = /^[^\n]+/, _blockLabel = /(?!\s*\])(?:\\.|[^\[\]\\])+/, def = edit(/^ {0,3}\[(label)\]: *(?:\n[ \t]*)?([^<\s][^\s]*|<.*?>)(?:(?: +(?:\n[ \t]*)?| *\n[ \t]*)(title))? *(?:\n+|$)/).replace("label", _blockLabel).replace("title", /(?:"(?:\\"?|[^"\\])*"|'[^'\n]*(?:\n[^'\n]+)*\n?'|\([^()]*\))/).getRegex(), list = edit(/^( {0,3}bull)([ \t][^\n]+?)?(?:\n|$)/).replace(/bull/g, bullet).getRegex(), _tag = "address|article|aside|base|basefont|blockquote|body|caption|center|col|colgroup|dd|details|dialog|dir|div|dl|dt|fieldset|figcaption|figure|footer|form|frame|frameset|h[1-6]|head|header|hr|html|iframe|legend|li|link|main|menu|menuitem|meta|nav|noframes|ol|optgroup|option|p|param|search|section|summary|table|tbody|td|tfoot|th|thead|title|tr|track|ul", _comment = /<!--(?:-?>|[\s\S]*?(?:-->|$))/, html = edit("^ {0,3}(?:<(script|pre|style|textarea)[\\s>][\\s\\S]*?(?:</\\1>[^\\n]*\\n+|$)|comment[^\\n]*(\\n+|$)|<\\?[\\s\\S]*?(?:\\?>\\n*|$)|<![A-Z][\\s\\S]*?(?:>\\n*|$)|<!\\[CDATA\\[[\\s\\S]*?(?:\\]\\]>\\n*|$)|</?(tag)(?: +|\\n|/?>)[\\s\\S]*?(?:(?:\\n[ 	]*)+\\n|$)|<(?!script|pre|style|textarea)([a-z][\\w-]*)(?:attribute)*? */?>(?=[ \\t]*(?:\\n|$))[\\s\\S]*?(?:(?:\\n[ 	]*)+\\n|$)|</(?!script|pre|style|textarea)[a-z][\\w-]*\\s*>(?=[ \\t]*(?:\\n|$))[\\s\\S]*?(?:(?:\\n[ 	]*)+\\n|$))", "i").replace("comment", _comment).replace("tag", _tag).replace("attribute", / +[a-zA-Z:_][\w.:-]*(?: *= *"[^"\n]*"| *= *'[^'\n]*'| *= *[^\s"'=<>`]+)?/).getRegex(), paragraph = edit(_paragraph).replace("hr", hr).replace("heading", " {0,3}#{1,6}(?:\\s|$)").replace("|lheading", "").replace("|table", "").replace("blockquote", " {0,3}>").replace("fences", " {0,3}(?:`{3,}(?=[^`\\n]*\\n)|~{3,})[^\\n]*\\n").replace("list", " {0,3}(?:[*+-]|1[.)]) ").replace("html", "</?(?:tag)(?: +|\\n|/?>)|<(?:script|pre|style|textarea|!--)").replace("tag", _tag).getRegex(), blockquote = edit(/^( {0,3}> ?(paragraph|[^\n]*)(?:\n|$))+/).replace("paragraph", paragraph).getRegex(), blockNormal = { blockquote, code: blockCode, def, fences, heading, hr, html, lheading, list, newline, paragraph, table: noopTest, text: blockText }, gfmTable = edit("^ *([^\\n ].*)\\n {0,3}((?:\\| *)?:?-+:? *(?:\\| *:?-+:? *)*(?:\\| *)?)(?:\\n((?:(?! *\\n|hr|heading|blockquote|code|fences|list|html).*(?:\\n|$))*)\\n*|$)").replace("hr", hr).replace("heading", " {0,3}#{1,6}(?:\\s|$)").replace("blockquote", " {0,3}>").replace("code", "(?: {4}| {0,3}	)[^\\n]").replace("fences", " {0,3}(?:`{3,}(?=[^`\\n]*\\n)|~{3,})[^\\n]*\\n").replace("list", " {0,3}(?:[*+-]|1[.)]) ").replace("html", "</?(?:tag)(?: +|\\n|/?>)|<(?:script|pre|style|textarea|!--)").replace("tag", _tag).getRegex(), blockGfm = { ...blockNormal, lheading: lheadingGfm, table: gfmTable, paragraph: edit(_paragraph).replace("hr", hr).replace("heading", " {0,3}#{1,6}(?:\\s|$)").replace("|lheading", "").replace("table", gfmTable).replace("blockquote", " {0,3}>").replace("fences", " {0,3}(?:`{3,}(?=[^`\\n]*\\n)|~{3,})[^\\n]*\\n").replace("list", " {0,3}(?:[*+-]|1[.)]) ").replace("html", "</?(?:tag)(?: +|\\n|/?>)|<(?:script|pre|style|textarea|!--)").replace("tag", _tag).getRegex() }, blockPedantic = {
    ...blockNormal, html: edit(`^ *(?:comment *(?:\\n|\\s*$)|<(tag)[\\s\\S]+?</\\1> *(?:\\n{2,}|\\s*$)|<tag(?:"[^"]*"|'[^']*'|\\s[^'"/>\\s]*)*?/?> *(?:\\n{2,}|\\s*$))`).replace("comment", _comment).replace(/tag/g, "(?!(?:a|em|strong|small|s|cite|q|dfn|abbr|data|time|code|var|samp|kbd|sub|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo|span|br|wbr|ins|del|img)\\b)\\w+(?!:|[^\\w\\s@]*@)\\b").getRegex(), def: /^ *\[([^\]]+)\]: *<?([^\s>]+)>?(?: +(["(][^\n]+[")]))? *(?:\n+|$)/, heading: /^(#{1,6})(.*)(?:\n+|$)/, fences: noopTest, lheading: /^(.+?)\n {0,3}(=+|-+) *(?:\n+|$)/, paragraph: edit(_paragraph).replace("hr", hr).replace("heading", ` *#{1,6} *[^
]`).replace("lheading", lheading).replace("|table", "").replace("blockquote", " {0,3}>").replace("|fences", "").replace("|list", "").replace("|html", "").replace("|tag", "").getRegex()
}, escape$1 = /^\\([!"#$%&'()*+,\-./:;<=>?@\[\]\\^_`{|}~])/, inlineCode = /^(`+)([^`]|[^`][\s\S]*?[^`])\1(?!`)/, br = /^( {2,}|\\)\n(?!\s*$)/, inlineText = /^(`+|[^`])(?:(?= {2,}\n)|[\s\S]*?(?:(?=[\\<!\[`*_]|\b_|$)|[^ ](?= {2,}\n)))/, _punctuation = /[\p{P}\p{S}]/u, _punctuationOrSpace = /[\s\p{P}\p{S}]/u, _notPunctuationOrSpace = /[^\s\p{P}\p{S}]/u, punctuation = edit(/^((?![*_])punctSpace)/, "u").replace(/punctSpace/g, _punctuationOrSpace).getRegex(), _punctuationGfmStrongEm = /(?!~)[\p{P}\p{S}]/u, _punctuationOrSpaceGfmStrongEm = /(?!~)[\s\p{P}\p{S}]/u, _notPunctuationOrSpaceGfmStrongEm = /(?:[^\s\p{P}\p{S}]|~)/u, blockSkip = /\[[^[\]]*?\]\((?:\\.|[^\\\(\)]|\((?:\\.|[^\\\(\)])*\))*\)|`[^`]*?`|<[^<>]*?>/g, emStrongLDelimCore = /^(?:\*+(?:((?!\*)punct)|[^\s*]))|^_+(?:((?!_)punct)|([^\s_]))/, emStrongLDelim = edit(emStrongLDelimCore, "u").replace(/punct/g, _punctuation).getRegex(), emStrongLDelimGfm = edit(emStrongLDelimCore, "u").replace(/punct/g, _punctuationGfmStrongEm).getRegex(), emStrongRDelimAstCore = "^[^_*]*?__[^_*]*?\\*[^_*]*?(?=__)|[^*]+(?=[^*])|(?!\\*)punct(\\*+)(?=[\\s]|$)|notPunctSpace(\\*+)(?!\\*)(?=punctSpace|$)|(?!\\*)punctSpace(\\*+)(?=notPunctSpace)|[\\s](\\*+)(?!\\*)(?=punct)|(?!\\*)punct(\\*+)(?!\\*)(?=punct)|notPunctSpace(\\*+)(?=notPunctSpace)", emStrongRDelimAst = edit(emStrongRDelimAstCore, "gu").replace(/notPunctSpace/g, _notPunctuationOrSpace).replace(/punctSpace/g, _punctuationOrSpace).replace(/punct/g, _punctuation).getRegex(), emStrongRDelimAstGfm = edit(emStrongRDelimAstCore, "gu").replace(/notPunctSpace/g, _notPunctuationOrSpaceGfmStrongEm).replace(/punctSpace/g, _punctuationOrSpaceGfmStrongEm).replace(/punct/g, _punctuationGfmStrongEm).getRegex(), emStrongRDelimUnd = edit("^[^_*]*?\\*\\*[^_*]*?_[^_*]*?(?=\\*\\*)|[^_]+(?=[^_])|(?!_)punct(_+)(?=[\\s]|$)|notPunctSpace(_+)(?!_)(?=punctSpace|$)|(?!_)punctSpace(_+)(?=notPunctSpace)|[\\s](_+)(?!_)(?=punct)|(?!_)punct(_+)(?!_)(?=punct)", "gu").replace(/notPunctSpace/g, _notPunctuationOrSpace).replace(/punctSpace/g, _punctuationOrSpace).replace(/punct/g, _punctuation).getRegex(), anyPunctuation = edit(/\\(punct)/, "gu").replace(/punct/g, _punctuation).getRegex(), autolink = edit(/^<(scheme:[^\s\x00-\x1f<>]*|email)>/).replace("scheme", /[a-zA-Z][a-zA-Z0-9+.-]{1,31}/).replace("email", /[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+(@)[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+(?![-_])/).getRegex(), _inlineComment = edit(_comment).replace("(?:-->|$)", "-->").getRegex(), tag = edit("^comment|^</[a-zA-Z][\\w:-]*\\s*>|^<[a-zA-Z][\\w-]*(?:attribute)*?\\s*/?>|^<\\?[\\s\\S]*?\\?>|^<![a-zA-Z]+\\s[\\s\\S]*?>|^<!\\[CDATA\\[[\\s\\S]*?\\]\\]>").replace("comment", _inlineComment).replace("attribute", /\s+[a-zA-Z:_][\w.:-]*(?:\s*=\s*"[^"]*"|\s*=\s*'[^']*'|\s*=\s*[^\s"'=<>`]+)?/).getRegex(), _inlineLabel = /(?:\[(?:\\.|[^\[\]\\])*\]|\\.|`[^`]*`|[^\[\]\\`])*?/, link = edit(/^!?\[(label)\]\(\s*(href)(?:\s+(title))?\s*\)/).replace("label", _inlineLabel).replace("href", /<(?:\\.|[^\n<>\\])+>|[^\s\x00-\x1f]*/).replace("title", /"(?:\\"?|[^"\\])*"|'(?:\\'?|[^'\\])*'|\((?:\\\)?|[^)\\])*\)/).getRegex(), reflink = edit(/^!?\[(label)\]\[(ref)\]/).replace("label", _inlineLabel).replace("ref", _blockLabel).getRegex(), nolink = edit(/^!?\[(ref)\](?:\[\])?/).replace("ref", _blockLabel).getRegex(), reflinkSearch = edit("reflink|nolink(?!\\()", "g").replace("reflink", reflink).replace("nolink", nolink).getRegex(), inlineNormal = { _backpedal: noopTest, anyPunctuation, autolink, blockSkip, br, code: inlineCode, del: noopTest, emStrongLDelim, emStrongRDelimAst, emStrongRDelimUnd, escape: escape$1, link, nolink, punctuation, reflink, reflinkSearch, tag, text: inlineText, url: noopTest }, inlinePedantic = { ...inlineNormal, link: edit(/^!?\[(label)\]\((.*?)\)/).replace("label", _inlineLabel).getRegex(), reflink: edit(/^!?\[(label)\]\s*\[([^\]]*)\]/).replace("label", _inlineLabel).getRegex() }, inlineGfm = { ...inlineNormal, emStrongRDelimAst: emStrongRDelimAstGfm, emStrongLDelim: emStrongLDelimGfm, url: edit(/^((?:ftp|https?):\/\/|www\.)(?:[a-zA-Z0-9\-]+\.?)+[^\s<]*|^email/, "i").replace("email", /[A-Za-z0-9._+-]+(@)[a-zA-Z0-9-_]+(?:\.[a-zA-Z0-9-_]*[a-zA-Z0-9])+(?![-_])/).getRegex(), _backpedal: /(?:[^?!.,:;*_'"~()&]+|\([^)]*\)|&(?![a-zA-Z0-9]+;$)|[?!.,:;*_'"~)]+(?!$))+/, del: /^(~~?)(?=[^\s~])((?:\\.|[^\\])*?(?:\\.|[^\s~\\]))\1(?=[^~]|$)/, text: /^([`~]+|[^`~])(?:(?= {2,}\n)|(?=[a-zA-Z0-9.!#$%&'*+\/=?_`{\|}~-]+@)|[\s\S]*?(?:(?=[\\<!\[`*~_]|\b_|https?:\/\/|ftp:\/\/|www\.|$)|[^ ](?= {2,}\n)|[^a-zA-Z0-9.!#$%&'*+\/=?_`{\|}~-](?=[a-zA-Z0-9.!#$%&'*+\/=?_`{\|}~-]+@)))/ }, inlineBreaks = { ...inlineGfm, br: edit(br).replace("{2,}", "*").getRegex(), text: edit(inlineGfm.text).replace("\\b_", "\\b_| {2,}\\n").replace(/\{2,\}/g, "*").getRegex() }, block = { normal: blockNormal, gfm: blockGfm, pedantic: blockPedantic }, inline = { normal: inlineNormal, gfm: inlineGfm, breaks: inlineBreaks, pedantic: inlinePedantic }, escapeReplacements = { "&": "&amp;", "<": "&lt;", ">": "&gt;", '"': "&quot;", "'": "&#39;" }, getEscapeReplacement = s => escapeReplacements[s]; function escape(s, e) { if (e) { if (other.escapeTest.test(s)) return s.replace(other.escapeReplace, getEscapeReplacement) } else if (other.escapeTestNoEncode.test(s)) return s.replace(other.escapeReplaceNoEncode, getEscapeReplacement); return s } function cleanUrl(s) { try { s = encodeURI(s).replace(other.percentDecode, "%") } catch { return null } return s } function splitCells(s, e) { const t = s.replace(other.findPipe, (i, o, a) => { let c = !1, l = o; for (; --l >= 0 && a[l] === "\\";)c = !c; return c ? "|" : " |" }), n = t.split(other.splitPipe); let r = 0; if (n[0].trim() || n.shift(), n.length > 0 && !n.at(-1)?.trim() && n.pop(), e) if (n.length > e) n.splice(e); else for (; n.length < e;)n.push(""); for (; r < n.length; r++)n[r] = n[r].trim().replace(other.slashPipe, "|"); return n } function rtrim(s, e, t) { const n = s.length; if (n === 0) return ""; let r = 0; for (; r < n && s.charAt(n - r - 1) === e;)r++; return s.slice(0, n - r) } function findClosingBracket(s, e) { if (s.indexOf(e[1]) === -1) return -1; let t = 0; for (let n = 0; n < s.length; n++)if (s[n] === "\\") n++; else if (s[n] === e[0]) t++; else if (s[n] === e[1] && (t--, t < 0)) return n; return -1 } function outputLink(s, e, t, n, r) { const i = e.href, o = e.title || null, a = s[1].replace(r.other.outputLinkReplace, "$1"); if (s[0].charAt(0) !== "!") { n.state.inLink = !0; const c = { type: "link", raw: t, href: i, title: o, text: a, tokens: n.inlineTokens(a) }; return n.state.inLink = !1, c } return { type: "image", raw: t, href: i, title: o, text: a } } function indentCodeCompensation(s, e, t) {
    const n = s.match(t.other.indentCodeCompensation); if (n === null) return e; const r = n[1]; return e.split(`
`).map(i => { const o = i.match(t.other.beginningSpace); if (o === null) return i; const [a] = o; return a.length >= r.length ? i.slice(r.length) : i }).join(`
`)
} class _Tokenizer {
    options; rules; lexer; constructor(e) { this.options = e || _defaults } space(e) { const t = this.rules.block.newline.exec(e); if (t && t[0].length > 0) return { type: "space", raw: t[0] } } code(e) {
        const t = this.rules.block.code.exec(e); if (t) {
            const n = t[0].replace(this.rules.other.codeRemoveIndent, ""); return {
                type: "code", raw: t[0], codeBlockStyle: "indented", text: this.options.pedantic ? n : rtrim(n, `
`)
            }
        }
    } fences(e) { const t = this.rules.block.fences.exec(e); if (t) { const n = t[0], r = indentCodeCompensation(n, t[3] || "", this.rules); return { type: "code", raw: n, lang: t[2] ? t[2].trim().replace(this.rules.inline.anyPunctuation, "$1") : t[2], text: r } } } heading(e) { const t = this.rules.block.heading.exec(e); if (t) { let n = t[2].trim(); if (this.rules.other.endingHash.test(n)) { const r = rtrim(n, "#"); (this.options.pedantic || !r || this.rules.other.endingSpaceChar.test(r)) && (n = r.trim()) } return { type: "heading", raw: t[0], depth: t[1].length, text: n, tokens: this.lexer.inline(n) } } } hr(e) {
        const t = this.rules.block.hr.exec(e); if (t) return {
            type: "hr", raw: rtrim(t[0], `
`)
        }
    } blockquote(e) {
        const t = this.rules.block.blockquote.exec(e); if (t) {
            let n = rtrim(t[0], `
`).split(`
`), r = "", i = ""; const o = []; for (; n.length > 0;) {
                let a = !1; const c = []; let l; for (l = 0; l < n.length; l++)if (this.rules.other.blockquoteStart.test(n[l])) c.push(n[l]), a = !0; else if (!a) c.push(n[l]); else break; n = n.slice(l); const u = c.join(`
`), p = u.replace(this.rules.other.blockquoteSetextReplace, `
    $1`).replace(this.rules.other.blockquoteSetextReplace2, ""); r = r ? `${r}
${u}` : u, i = i ? `${i}
${p}` : p; const f = this.lexer.state.top; if (this.lexer.state.top = !0, this.lexer.blockTokens(p, o, !0), this.lexer.state.top = f, n.length === 0) break; const h = o.at(-1); if (h?.type === "code") break; if (h?.type === "blockquote") {
                    const d = h, g = d.raw + `
`+ n.join(`
`), m = this.blockquote(g); o[o.length - 1] = m, r = r.substring(0, r.length - d.raw.length) + m.raw, i = i.substring(0, i.length - d.text.length) + m.text; break
                } else if (h?.type === "list") {
                    const d = h, g = d.raw + `
`+ n.join(`
`), m = this.list(g); o[o.length - 1] = m, r = r.substring(0, r.length - h.raw.length) + m.raw, i = i.substring(0, i.length - d.raw.length) + m.raw, n = g.substring(o.at(-1).raw.length).split(`
`); continue
                }
            } return { type: "blockquote", raw: r, tokens: o, text: i }
        }
    } list(e) {
        let t = this.rules.block.list.exec(e); if (t) {
            let n = t[1].trim(); const r = n.length > 1, i = { type: "list", raw: "", ordered: r, start: r ? +n.slice(0, -1) : "", loose: !1, items: [] }; n = r ? `\\d{1,9}\\${n.slice(-1)}` : `\\${n}`, this.options.pedantic && (n = r ? n : "[*+-]"); const o = this.rules.other.listItemRegex(n); let a = !1; for (; e;) {
                let l = !1, u = "", p = ""; if (!(t = o.exec(e)) || this.rules.block.hr.test(e)) break; u = t[0], e = e.substring(u.length); let f = t[2].split(`
`, 1)[0].replace(this.rules.other.listReplaceTabs, b => " ".repeat(3 * b.length)), h = e.split(`
`, 1)[0], d = !f.trim(), g = 0; if (this.options.pedantic ? (g = 2, p = f.trimStart()) : d ? g = t[1].length + 1 : (g = t[2].search(this.rules.other.nonSpaceChar), g = g > 4 ? 1 : g, p = f.slice(g), g += t[1].length), d && this.rules.other.blankLine.test(h) && (u += h + `
`, e = e.substring(h.length + 1), l = !0), !l) {
                    const b = this.rules.other.nextBulletRegex(g), x = this.rules.other.hrRegex(g), k = this.rules.other.fencesBeginRegex(g), _ = this.rules.other.headingBeginRegex(g), C = this.rules.other.htmlBeginRegex(g); for (; e;) {
                        const y = e.split(`
`, 1)[0]; let w; if (h = y, this.options.pedantic ? (h = h.replace(this.rules.other.listReplaceNesting, "  "), w = h) : w = h.replace(this.rules.other.tabCharGlobal, "    "), k.test(h) || _.test(h) || C.test(h) || b.test(h) || x.test(h)) break; if (w.search(this.rules.other.nonSpaceChar) >= g || !h.trim()) p += `
`+ w.slice(g); else {
                            if (d || f.replace(this.rules.other.tabCharGlobal, "    ").search(this.rules.other.nonSpaceChar) >= 4 || k.test(f) || _.test(f) || x.test(f)) break; p += `
`+ h
                        } !d && !h.trim() && (d = !0), u += y + `
`, e = e.substring(y.length + 1), f = w.slice(g)
                    }
                } i.loose || (a ? i.loose = !0 : this.rules.other.doubleBlankLine.test(u) && (a = !0)); let m = null, v; this.options.gfm && (m = this.rules.other.listIsTask.exec(p), m && (v = m[0] !== "[ ] ", p = p.replace(this.rules.other.listReplaceTask, ""))), i.items.push({ type: "list_item", raw: u, task: !!m, checked: v, loose: !1, text: p, tokens: [] }), i.raw += u
            } const c = i.items.at(-1); if (c) c.raw = c.raw.trimEnd(), c.text = c.text.trimEnd(); else return; i.raw = i.raw.trimEnd(); for (let l = 0; l < i.items.length; l++)if (this.lexer.state.top = !1, i.items[l].tokens = this.lexer.blockTokens(i.items[l].text, []), !i.loose) { const u = i.items[l].tokens.filter(f => f.type === "space"), p = u.length > 0 && u.some(f => this.rules.other.anyLine.test(f.raw)); i.loose = p } if (i.loose) for (let l = 0; l < i.items.length; l++)i.items[l].loose = !0; return i
        }
    } html(e) { const t = this.rules.block.html.exec(e); if (t) return { type: "html", block: !0, raw: t[0], pre: t[1] === "pre" || t[1] === "script" || t[1] === "style", text: t[0] } } def(e) { const t = this.rules.block.def.exec(e); if (t) { const n = t[1].toLowerCase().replace(this.rules.other.multipleSpaceGlobal, " "), r = t[2] ? t[2].replace(this.rules.other.hrefBrackets, "$1").replace(this.rules.inline.anyPunctuation, "$1") : "", i = t[3] ? t[3].substring(1, t[3].length - 1).replace(this.rules.inline.anyPunctuation, "$1") : t[3]; return { type: "def", tag: n, raw: t[0], href: r, title: i } } } table(e) {
        const t = this.rules.block.table.exec(e); if (!t || !this.rules.other.tableDelimiter.test(t[2])) return; const n = splitCells(t[1]), r = t[2].replace(this.rules.other.tableAlignChars, "").split("|"), i = t[3]?.trim() ? t[3].replace(this.rules.other.tableRowBlankLine, "").split(`
`) : [], o = { type: "table", raw: t[0], header: [], align: [], rows: [] }; if (n.length === r.length) { for (const a of r) this.rules.other.tableAlignRight.test(a) ? o.align.push("right") : this.rules.other.tableAlignCenter.test(a) ? o.align.push("center") : this.rules.other.tableAlignLeft.test(a) ? o.align.push("left") : o.align.push(null); for (let a = 0; a < n.length; a++)o.header.push({ text: n[a], tokens: this.lexer.inline(n[a]), header: !0, align: o.align[a] }); for (const a of i) o.rows.push(splitCells(a, o.header.length).map((c, l) => ({ text: c, tokens: this.lexer.inline(c), header: !1, align: o.align[l] }))); return o }
    } lheading(e) { const t = this.rules.block.lheading.exec(e); if (t) return { type: "heading", raw: t[0], depth: t[2].charAt(0) === "=" ? 1 : 2, text: t[1], tokens: this.lexer.inline(t[1]) } } paragraph(e) {
        const t = this.rules.block.paragraph.exec(e); if (t) {
            const n = t[1].charAt(t[1].length - 1) === `
`? t[1].slice(0, -1) : t[1]; return { type: "paragraph", raw: t[0], text: n, tokens: this.lexer.inline(n) }
        }
    } text(e) { const t = this.rules.block.text.exec(e); if (t) return { type: "text", raw: t[0], text: t[0], tokens: this.lexer.inline(t[0]) } } escape(e) { const t = this.rules.inline.escape.exec(e); if (t) return { type: "escape", raw: t[0], text: t[1] } } tag(e) { const t = this.rules.inline.tag.exec(e); if (t) return !this.lexer.state.inLink && this.rules.other.startATag.test(t[0]) ? this.lexer.state.inLink = !0 : this.lexer.state.inLink && this.rules.other.endATag.test(t[0]) && (this.lexer.state.inLink = !1), !this.lexer.state.inRawBlock && this.rules.other.startPreScriptTag.test(t[0]) ? this.lexer.state.inRawBlock = !0 : this.lexer.state.inRawBlock && this.rules.other.endPreScriptTag.test(t[0]) && (this.lexer.state.inRawBlock = !1), { type: "html", raw: t[0], inLink: this.lexer.state.inLink, inRawBlock: this.lexer.state.inRawBlock, block: !1, text: t[0] } } link(e) { const t = this.rules.inline.link.exec(e); if (t) { const n = t[2].trim(); if (!this.options.pedantic && this.rules.other.startAngleBracket.test(n)) { if (!this.rules.other.endAngleBracket.test(n)) return; const o = rtrim(n.slice(0, -1), "\\"); if ((n.length - o.length) % 2 === 0) return } else { const o = findClosingBracket(t[2], "()"); if (o > -1) { const c = (t[0].indexOf("!") === 0 ? 5 : 4) + t[1].length + o; t[2] = t[2].substring(0, o), t[0] = t[0].substring(0, c).trim(), t[3] = "" } } let r = t[2], i = ""; if (this.options.pedantic) { const o = this.rules.other.pedanticHrefTitle.exec(r); o && (r = o[1], i = o[3]) } else i = t[3] ? t[3].slice(1, -1) : ""; return r = r.trim(), this.rules.other.startAngleBracket.test(r) && (this.options.pedantic && !this.rules.other.endAngleBracket.test(n) ? r = r.slice(1) : r = r.slice(1, -1)), outputLink(t, { href: r && r.replace(this.rules.inline.anyPunctuation, "$1"), title: i && i.replace(this.rules.inline.anyPunctuation, "$1") }, t[0], this.lexer, this.rules) } } reflink(e, t) { let n; if ((n = this.rules.inline.reflink.exec(e)) || (n = this.rules.inline.nolink.exec(e))) { const r = (n[2] || n[1]).replace(this.rules.other.multipleSpaceGlobal, " "), i = t[r.toLowerCase()]; if (!i) { const o = n[0].charAt(0); return { type: "text", raw: o, text: o } } return outputLink(n, i, n[0], this.lexer, this.rules) } } emStrong(e, t, n = "") { let r = this.rules.inline.emStrongLDelim.exec(e); if (!r || r[3] && n.match(this.rules.other.unicodeAlphaNumeric)) return; if (!(r[1] || r[2] || "") || !n || this.rules.inline.punctuation.exec(n)) { const o = [...r[0]].length - 1; let a, c, l = o, u = 0; const p = r[0][0] === "*" ? this.rules.inline.emStrongRDelimAst : this.rules.inline.emStrongRDelimUnd; for (p.lastIndex = 0, t = t.slice(-1 * e.length + o); (r = p.exec(t)) != null;) { if (a = r[1] || r[2] || r[3] || r[4] || r[5] || r[6], !a) continue; if (c = [...a].length, r[3] || r[4]) { l += c; continue } else if ((r[5] || r[6]) && o % 3 && !((o + c) % 3)) { u += c; continue } if (l -= c, l > 0) continue; c = Math.min(c, c + l + u); const f = [...r[0]][0].length, h = e.slice(0, o + r.index + f + c); if (Math.min(o, c) % 2) { const g = h.slice(1, -1); return { type: "em", raw: h, text: g, tokens: this.lexer.inlineTokens(g) } } const d = h.slice(2, -2); return { type: "strong", raw: h, text: d, tokens: this.lexer.inlineTokens(d) } } } } codespan(e) { const t = this.rules.inline.code.exec(e); if (t) { let n = t[2].replace(this.rules.other.newLineCharGlobal, " "); const r = this.rules.other.nonSpaceChar.test(n), i = this.rules.other.startingSpaceChar.test(n) && this.rules.other.endingSpaceChar.test(n); return r && i && (n = n.substring(1, n.length - 1)), { type: "codespan", raw: t[0], text: n } } } br(e) { const t = this.rules.inline.br.exec(e); if (t) return { type: "br", raw: t[0] } } del(e) { const t = this.rules.inline.del.exec(e); if (t) return { type: "del", raw: t[0], text: t[2], tokens: this.lexer.inlineTokens(t[2]) } } autolink(e) { const t = this.rules.inline.autolink.exec(e); if (t) { let n, r; return t[2] === "@" ? (n = t[1], r = "mailto:" + n) : (n = t[1], r = n), { type: "link", raw: t[0], text: n, href: r, tokens: [{ type: "text", raw: n, text: n }] } } } url(e) { let t; if (t = this.rules.inline.url.exec(e)) { let n, r; if (t[2] === "@") n = t[0], r = "mailto:" + n; else { let i; do i = t[0], t[0] = this.rules.inline._backpedal.exec(t[0])?.[0] ?? ""; while (i !== t[0]); n = t[0], t[1] === "www." ? r = "http://" + t[0] : r = t[0] } return { type: "link", raw: t[0], text: n, href: r, tokens: [{ type: "text", raw: n, text: n }] } } } inlineText(e) { const t = this.rules.inline.text.exec(e); if (t) { const n = this.lexer.state.inRawBlock; return { type: "text", raw: t[0], text: t[0], escaped: n } } }
} class _Lexer {
    tokens; options; state; tokenizer; inlineQueue; constructor(e) { this.tokens = [], this.tokens.links = Object.create(null), this.options = e || _defaults, this.options.tokenizer = this.options.tokenizer || new _Tokenizer, this.tokenizer = this.options.tokenizer, this.tokenizer.options = this.options, this.tokenizer.lexer = this, this.inlineQueue = [], this.state = { inLink: !1, inRawBlock: !1, top: !0 }; const t = { other, block: block.normal, inline: inline.normal }; this.options.pedantic ? (t.block = block.pedantic, t.inline = inline.pedantic) : this.options.gfm && (t.block = block.gfm, this.options.breaks ? t.inline = inline.breaks : t.inline = inline.gfm), this.tokenizer.rules = t } static get rules() { return { block, inline } } static lex(e, t) { return new _Lexer(t).lex(e) } static lexInline(e, t) { return new _Lexer(t).inlineTokens(e) } lex(e) {
        e = e.replace(other.carriageReturn, `
`), this.blockTokens(e, this.tokens); for (let t = 0; t < this.inlineQueue.length; t++) { const n = this.inlineQueue[t]; this.inlineTokens(n.src, n.tokens) } return this.inlineQueue = [], this.tokens
    } blockTokens(e, t = [], n = !1) {
        for (this.options.pedantic && (e = e.replace(other.tabCharGlobal, "    ").replace(other.spaceLine, "")); e;) {
            let r; if (this.options.extensions?.block?.some(o => (r = o.call({ lexer: this }, e, t)) ? (e = e.substring(r.raw.length), t.push(r), !0) : !1)) continue; if (r = this.tokenizer.space(e)) {
                e = e.substring(r.raw.length); const o = t.at(-1); r.raw.length === 1 && o !== void 0 ? o.raw += `
`: t.push(r); continue
            } if (r = this.tokenizer.code(e)) {
                e = e.substring(r.raw.length); const o = t.at(-1); o?.type === "paragraph" || o?.type === "text" ? (o.raw += `
`+ r.raw, o.text += `
`+ r.text, this.inlineQueue.at(-1).src = o.text) : t.push(r); continue
            } if (r = this.tokenizer.fences(e)) { e = e.substring(r.raw.length), t.push(r); continue } if (r = this.tokenizer.heading(e)) { e = e.substring(r.raw.length), t.push(r); continue } if (r = this.tokenizer.hr(e)) { e = e.substring(r.raw.length), t.push(r); continue } if (r = this.tokenizer.blockquote(e)) { e = e.substring(r.raw.length), t.push(r); continue } if (r = this.tokenizer.list(e)) { e = e.substring(r.raw.length), t.push(r); continue } if (r = this.tokenizer.html(e)) { e = e.substring(r.raw.length), t.push(r); continue } if (r = this.tokenizer.def(e)) {
                e = e.substring(r.raw.length); const o = t.at(-1); o?.type === "paragraph" || o?.type === "text" ? (o.raw += `
`+ r.raw, o.text += `
`+ r.raw, this.inlineQueue.at(-1).src = o.text) : this.tokens.links[r.tag] || (this.tokens.links[r.tag] = { href: r.href, title: r.title }); continue
            } if (r = this.tokenizer.table(e)) { e = e.substring(r.raw.length), t.push(r); continue } if (r = this.tokenizer.lheading(e)) { e = e.substring(r.raw.length), t.push(r); continue } let i = e; if (this.options.extensions?.startBlock) { let o = 1 / 0; const a = e.slice(1); let c; this.options.extensions.startBlock.forEach(l => { c = l.call({ lexer: this }, a), typeof c == "number" && c >= 0 && (o = Math.min(o, c)) }), o < 1 / 0 && o >= 0 && (i = e.substring(0, o + 1)) } if (this.state.top && (r = this.tokenizer.paragraph(i))) {
                const o = t.at(-1); n && o?.type === "paragraph" ? (o.raw += `
`+ r.raw, o.text += `
`+ r.text, this.inlineQueue.pop(), this.inlineQueue.at(-1).src = o.text) : t.push(r), n = i.length !== e.length, e = e.substring(r.raw.length); continue
            } if (r = this.tokenizer.text(e)) {
                e = e.substring(r.raw.length); const o = t.at(-1); o?.type === "text" ? (o.raw += `
`+ r.raw, o.text += `
`+ r.text, this.inlineQueue.pop(), this.inlineQueue.at(-1).src = o.text) : t.push(r); continue
            } if (e) { const o = "Infinite loop on byte: " + e.charCodeAt(0); if (this.options.silent) { console.error(o); break } else throw new Error(o) }
        } return this.state.top = !0, t
    } inline(e, t = []) { return this.inlineQueue.push({ src: e, tokens: t }), t } inlineTokens(e, t = []) { let n = e, r = null; if (this.tokens.links) { const a = Object.keys(this.tokens.links); if (a.length > 0) for (; (r = this.tokenizer.rules.inline.reflinkSearch.exec(n)) != null;)a.includes(r[0].slice(r[0].lastIndexOf("[") + 1, -1)) && (n = n.slice(0, r.index) + "[" + "a".repeat(r[0].length - 2) + "]" + n.slice(this.tokenizer.rules.inline.reflinkSearch.lastIndex)) } for (; (r = this.tokenizer.rules.inline.blockSkip.exec(n)) != null;)n = n.slice(0, r.index) + "[" + "a".repeat(r[0].length - 2) + "]" + n.slice(this.tokenizer.rules.inline.blockSkip.lastIndex); for (; (r = this.tokenizer.rules.inline.anyPunctuation.exec(n)) != null;)n = n.slice(0, r.index) + "++" + n.slice(this.tokenizer.rules.inline.anyPunctuation.lastIndex); let i = !1, o = ""; for (; e;) { i || (o = ""), i = !1; let a; if (this.options.extensions?.inline?.some(l => (a = l.call({ lexer: this }, e, t)) ? (e = e.substring(a.raw.length), t.push(a), !0) : !1)) continue; if (a = this.tokenizer.escape(e)) { e = e.substring(a.raw.length), t.push(a); continue } if (a = this.tokenizer.tag(e)) { e = e.substring(a.raw.length), t.push(a); continue } if (a = this.tokenizer.link(e)) { e = e.substring(a.raw.length), t.push(a); continue } if (a = this.tokenizer.reflink(e, this.tokens.links)) { e = e.substring(a.raw.length); const l = t.at(-1); a.type === "text" && l?.type === "text" ? (l.raw += a.raw, l.text += a.text) : t.push(a); continue } if (a = this.tokenizer.emStrong(e, n, o)) { e = e.substring(a.raw.length), t.push(a); continue } if (a = this.tokenizer.codespan(e)) { e = e.substring(a.raw.length), t.push(a); continue } if (a = this.tokenizer.br(e)) { e = e.substring(a.raw.length), t.push(a); continue } if (a = this.tokenizer.del(e)) { e = e.substring(a.raw.length), t.push(a); continue } if (a = this.tokenizer.autolink(e)) { e = e.substring(a.raw.length), t.push(a); continue } if (!this.state.inLink && (a = this.tokenizer.url(e))) { e = e.substring(a.raw.length), t.push(a); continue } let c = e; if (this.options.extensions?.startInline) { let l = 1 / 0; const u = e.slice(1); let p; this.options.extensions.startInline.forEach(f => { p = f.call({ lexer: this }, u), typeof p == "number" && p >= 0 && (l = Math.min(l, p)) }), l < 1 / 0 && l >= 0 && (c = e.substring(0, l + 1)) } if (a = this.tokenizer.inlineText(c)) { e = e.substring(a.raw.length), a.raw.slice(-1) !== "_" && (o = a.raw.slice(-1)), i = !0; const l = t.at(-1); l?.type === "text" ? (l.raw += a.raw, l.text += a.text) : t.push(a); continue } if (e) { const l = "Infinite loop on byte: " + e.charCodeAt(0); if (this.options.silent) { console.error(l); break } else throw new Error(l) } } return t }
} class _Renderer {
    options; parser; constructor(e) { this.options = e || _defaults } space(e) { return "" } code({ text: e, lang: t, escaped: n }) {
        const r = (t || "").match(other.notSpaceStart)?.[0], i = e.replace(other.endingNewline, "") + `
`; return r ? '<pre><code class="language-' + escape(r) + '">' + (n ? i : escape(i, !0)) + `</code></pre>
`: "<pre><code>" + (n ? i : escape(i, !0)) + `</code></pre>
`} blockquote({ tokens: e }) {
        return `<blockquote>
${this.parser.parse(e)}</blockquote>
`} html({ text: e }) { return e } heading({ tokens: e, depth: t }) {
        return `<h${t}>${this.parser.parseInline(e)}</h${t}>
`} hr(e) {
        return `<hr>
`} list(e) {
        const t = e.ordered, n = e.start; let r = ""; for (let a = 0; a < e.items.length; a++) { const c = e.items[a]; r += this.listitem(c) } const i = t ? "ol" : "ul", o = t && n !== 1 ? ' start="' + n + '"' : ""; return "<" + i + o + `>
`+ r + "</" + i + `>
`} listitem(e) {
        let t = ""; if (e.task) { const n = this.checkbox({ checked: !!e.checked }); e.loose ? e.tokens[0]?.type === "paragraph" ? (e.tokens[0].text = n + " " + e.tokens[0].text, e.tokens[0].tokens && e.tokens[0].tokens.length > 0 && e.tokens[0].tokens[0].type === "text" && (e.tokens[0].tokens[0].text = n + " " + escape(e.tokens[0].tokens[0].text), e.tokens[0].tokens[0].escaped = !0)) : e.tokens.unshift({ type: "text", raw: n + " ", text: n + " ", escaped: !0 }) : t += n + " " } return t += this.parser.parse(e.tokens, !!e.loose), `<li>${t}</li>
`} checkbox({ checked: e }) { return "<input " + (e ? 'checked="" ' : "") + 'disabled="" type="checkbox">' } paragraph({ tokens: e }) {
        return `<p>${this.parser.parseInline(e)}</p>
`} table(e) {
        let t = "", n = ""; for (let i = 0; i < e.header.length; i++)n += this.tablecell(e.header[i]); t += this.tablerow({ text: n }); let r = ""; for (let i = 0; i < e.rows.length; i++) { const o = e.rows[i]; n = ""; for (let a = 0; a < o.length; a++)n += this.tablecell(o[a]); r += this.tablerow({ text: n }) } return r && (r = `<tbody>${r}</tbody>`), `<table>
<thead>
`+ t + `</thead>
`+ r + `</table>
`} tablerow({ text: e }) {
        return `<tr>
${e}</tr>
`} tablecell(e) {
        const t = this.parser.parseInline(e.tokens), n = e.header ? "th" : "td"; return (e.align ? `<${n} align="${e.align}">` : `<${n}>`) + t + `</${n}>
`} strong({ tokens: e }) { return `<strong>${this.parser.parseInline(e)}</strong>` } em({ tokens: e }) { return `<em>${this.parser.parseInline(e)}</em>` } codespan({ text: e }) { return `<code>${escape(e, !0)}</code>` } br(e) { return "<br>" } del({ tokens: e }) { return `<del>${this.parser.parseInline(e)}</del>` } link({ href: e, title: t, tokens: n }) { const r = this.parser.parseInline(n), i = cleanUrl(e); if (i === null) return r; e = i; let o = '<a href="' + e + '"'; return t && (o += ' title="' + escape(t) + '"'), o += ">" + r + "</a>", o } image({ href: e, title: t, text: n }) { const r = cleanUrl(e); if (r === null) return escape(n); e = r; let i = `<img src="${e}" alt="${n}"`; return t && (i += ` title="${escape(t)}"`), i += ">", i } text(e) { return "tokens" in e && e.tokens ? this.parser.parseInline(e.tokens) : "escaped" in e && e.escaped ? e.text : escape(e.text) }
} class _TextRenderer { strong({ text: e }) { return e } em({ text: e }) { return e } codespan({ text: e }) { return e } del({ text: e }) { return e } html({ text: e }) { return e } text({ text: e }) { return e } link({ text: e }) { return "" + e } image({ text: e }) { return "" + e } br() { return "" } } class _Parser {
    options; renderer; textRenderer; constructor(e) { this.options = e || _defaults, this.options.renderer = this.options.renderer || new _Renderer, this.renderer = this.options.renderer, this.renderer.options = this.options, this.renderer.parser = this, this.textRenderer = new _TextRenderer } static parse(e, t) { return new _Parser(t).parse(e) } static parseInline(e, t) { return new _Parser(t).parseInline(e) } parse(e, t = !0) {
        let n = ""; for (let r = 0; r < e.length; r++) {
            const i = e[r]; if (this.options.extensions?.renderers?.[i.type]) { const a = i, c = this.options.extensions.renderers[a.type].call({ parser: this }, a); if (c !== !1 || !["space", "hr", "heading", "code", "table", "blockquote", "list", "html", "paragraph", "text"].includes(a.type)) { n += c || ""; continue } } const o = i; switch (o.type) {
                case "space": { n += this.renderer.space(o); continue } case "hr": { n += this.renderer.hr(o); continue } case "heading": { n += this.renderer.heading(o); continue } case "code": { n += this.renderer.code(o); continue } case "table": { n += this.renderer.table(o); continue } case "blockquote": { n += this.renderer.blockquote(o); continue } case "list": { n += this.renderer.list(o); continue } case "html": { n += this.renderer.html(o); continue } case "paragraph": { n += this.renderer.paragraph(o); continue } case "text": {
                    let a = o, c = this.renderer.text(a); for (; r + 1 < e.length && e[r + 1].type === "text";)a = e[++r], c += `
`+ this.renderer.text(a); t ? n += this.renderer.paragraph({ type: "paragraph", raw: c, text: c, tokens: [{ type: "text", raw: c, text: c, escaped: !0 }] }) : n += c; continue
                } default: { const a = 'Token with "' + o.type + '" type was not found.'; if (this.options.silent) return console.error(a), ""; throw new Error(a) }
            }
        } return n
    } parseInline(e, t = this.renderer) { let n = ""; for (let r = 0; r < e.length; r++) { const i = e[r]; if (this.options.extensions?.renderers?.[i.type]) { const a = this.options.extensions.renderers[i.type].call({ parser: this }, i); if (a !== !1 || !["escape", "html", "link", "image", "strong", "em", "codespan", "br", "del", "text"].includes(i.type)) { n += a || ""; continue } } const o = i; switch (o.type) { case "escape": { n += t.text(o); break } case "html": { n += t.html(o); break } case "link": { n += t.link(o); break } case "image": { n += t.image(o); break } case "strong": { n += t.strong(o); break } case "em": { n += t.em(o); break } case "codespan": { n += t.codespan(o); break } case "br": { n += t.br(o); break } case "del": { n += t.del(o); break } case "text": { n += t.text(o); break } default: { const a = 'Token with "' + o.type + '" type was not found.'; if (this.options.silent) return console.error(a), ""; throw new Error(a) } } } return n }
} class _Hooks { options; block; constructor(e) { this.options = e || _defaults } static passThroughHooks = new Set(["preprocess", "postprocess", "processAllTokens"]); preprocess(e) { return e } postprocess(e) { return e } processAllTokens(e) { return e } provideLexer() { return this.block ? _Lexer.lex : _Lexer.lexInline } provideParser() { return this.block ? _Parser.parse : _Parser.parseInline } } class Marked {
    defaults = _getDefaults(); options = this.setOptions; parse = this.parseMarkdown(!0); parseInline = this.parseMarkdown(!1); Parser = _Parser; Renderer = _Renderer; TextRenderer = _TextRenderer; Lexer = _Lexer; Tokenizer = _Tokenizer; Hooks = _Hooks; constructor(...e) { this.use(...e) } walkTokens(e, t) { let n = []; for (const r of e) switch (n = n.concat(t.call(this, r)), r.type) { case "table": { const i = r; for (const o of i.header) n = n.concat(this.walkTokens(o.tokens, t)); for (const o of i.rows) for (const a of o) n = n.concat(this.walkTokens(a.tokens, t)); break } case "list": { const i = r; n = n.concat(this.walkTokens(i.items, t)); break } default: { const i = r; this.defaults.extensions?.childTokens?.[i.type] ? this.defaults.extensions.childTokens[i.type].forEach(o => { const a = i[o].flat(1 / 0); n = n.concat(this.walkTokens(a, t)) }) : i.tokens && (n = n.concat(this.walkTokens(i.tokens, t))) } }return n } use(...e) { const t = this.defaults.extensions || { renderers: {}, childTokens: {} }; return e.forEach(n => { const r = { ...n }; if (r.async = this.defaults.async || r.async || !1, n.extensions && (n.extensions.forEach(i => { if (!i.name) throw new Error("extension name required"); if ("renderer" in i) { const o = t.renderers[i.name]; o ? t.renderers[i.name] = function (...a) { let c = i.renderer.apply(this, a); return c === !1 && (c = o.apply(this, a)), c } : t.renderers[i.name] = i.renderer } if ("tokenizer" in i) { if (!i.level || i.level !== "block" && i.level !== "inline") throw new Error("extension level must be 'block' or 'inline'"); const o = t[i.level]; o ? o.unshift(i.tokenizer) : t[i.level] = [i.tokenizer], i.start && (i.level === "block" ? t.startBlock ? t.startBlock.push(i.start) : t.startBlock = [i.start] : i.level === "inline" && (t.startInline ? t.startInline.push(i.start) : t.startInline = [i.start])) } "childTokens" in i && i.childTokens && (t.childTokens[i.name] = i.childTokens) }), r.extensions = t), n.renderer) { const i = this.defaults.renderer || new _Renderer(this.defaults); for (const o in n.renderer) { if (!(o in i)) throw new Error(`renderer '${o}' does not exist`); if (["options", "parser"].includes(o)) continue; const a = o, c = n.renderer[a], l = i[a]; i[a] = (...u) => { let p = c.apply(i, u); return p === !1 && (p = l.apply(i, u)), p || "" } } r.renderer = i } if (n.tokenizer) { const i = this.defaults.tokenizer || new _Tokenizer(this.defaults); for (const o in n.tokenizer) { if (!(o in i)) throw new Error(`tokenizer '${o}' does not exist`); if (["options", "rules", "lexer"].includes(o)) continue; const a = o, c = n.tokenizer[a], l = i[a]; i[a] = (...u) => { let p = c.apply(i, u); return p === !1 && (p = l.apply(i, u)), p } } r.tokenizer = i } if (n.hooks) { const i = this.defaults.hooks || new _Hooks; for (const o in n.hooks) { if (!(o in i)) throw new Error(`hook '${o}' does not exist`); if (["options", "block"].includes(o)) continue; const a = o, c = n.hooks[a], l = i[a]; _Hooks.passThroughHooks.has(o) ? i[a] = u => { if (this.defaults.async) return Promise.resolve(c.call(i, u)).then(f => l.call(i, f)); const p = c.call(i, u); return l.call(i, p) } : i[a] = (...u) => { let p = c.apply(i, u); return p === !1 && (p = l.apply(i, u)), p } } r.hooks = i } if (n.walkTokens) { const i = this.defaults.walkTokens, o = n.walkTokens; r.walkTokens = function (a) { let c = []; return c.push(o.call(this, a)), i && (c = c.concat(i.call(this, a))), c } } this.defaults = { ...this.defaults, ...r } }), this } setOptions(e) { return this.defaults = { ...this.defaults, ...e }, this } lexer(e, t) { return _Lexer.lex(e, t ?? this.defaults) } parser(e, t) { return _Parser.parse(e, t ?? this.defaults) } parseMarkdown(e) { return (n, r) => { const i = { ...r }, o = { ...this.defaults, ...i }, a = this.onError(!!o.silent, !!o.async); if (this.defaults.async === !0 && i.async === !1) return a(new Error("marked(): The async option was set to true by an extension. Remove async: false from the parse options object to return a Promise.")); if (typeof n > "u" || n === null) return a(new Error("marked(): input parameter is undefined or null")); if (typeof n != "string") return a(new Error("marked(): input parameter is of type " + Object.prototype.toString.call(n) + ", string expected")); o.hooks && (o.hooks.options = o, o.hooks.block = e); const c = o.hooks ? o.hooks.provideLexer() : e ? _Lexer.lex : _Lexer.lexInline, l = o.hooks ? o.hooks.provideParser() : e ? _Parser.parse : _Parser.parseInline; if (o.async) return Promise.resolve(o.hooks ? o.hooks.preprocess(n) : n).then(u => c(u, o)).then(u => o.hooks ? o.hooks.processAllTokens(u) : u).then(u => o.walkTokens ? Promise.all(this.walkTokens(u, o.walkTokens)).then(() => u) : u).then(u => l(u, o)).then(u => o.hooks ? o.hooks.postprocess(u) : u).catch(a); try { o.hooks && (n = o.hooks.preprocess(n)); let u = c(n, o); o.hooks && (u = o.hooks.processAllTokens(u)), o.walkTokens && this.walkTokens(u, o.walkTokens); let p = l(u, o); return o.hooks && (p = o.hooks.postprocess(p)), p } catch (u) { return a(u) } } } onError(e, t) {
        return n => {
            if (n.message += `
Please report this to https://github.com/markedjs/marked.`, e) { const r = "<p>An error occurred:</p><pre>" + escape(n.message + "", !0) + "</pre>"; return t ? Promise.resolve(r) : r } if (t) return Promise.reject(n); throw n
        }
    }
} const markedInstance = new Marked; function marked(s, e) { return markedInstance.parse(s, e) } marked.options = marked.setOptions = function (s) { return markedInstance.setOptions(s), marked.defaults = markedInstance.defaults, changeDefaults(marked.defaults), marked }, marked.getDefaults = _getDefaults, marked.defaults = _defaults, marked.use = function (...s) { return markedInstance.use(...s), marked.defaults = markedInstance.defaults, changeDefaults(marked.defaults), marked }, marked.walkTokens = function (s, e) { return markedInstance.walkTokens(s, e) }, marked.parseInline = markedInstance.parseInline, marked.Parser = _Parser, marked.parser = _Parser.parse, marked.Renderer = _Renderer, marked.TextRenderer = _TextRenderer, marked.Lexer = _Lexer, marked.lexer = _Lexer.lex, marked.Tokenizer = _Tokenizer, marked.Hooks = _Hooks, marked.parse = marked, marked.options, marked.setOptions, marked.use, marked.walkTokens, marked.parseInline, _Parser.parse, _Lexer.lex; function Message(s) { var e, t, n = Base("div"), r = marked((t = (e = s.text) !== null && e !== void 0 ? e : s.body) !== null && t !== void 0 ? t : ""); return r instanceof Promise ? r.then(function (i) { return n.el.innerHTML = i }) : n.el.innerHTML = r, n.cssClass(styles$6.base), __assign({}, n) } var css_248z$5 = ".bot-message-module_base__bWP8U{clear:both;display:flex;flex-direction:row;float:left;gap:2px;min-height:52px;position:relative}.bot-message-module_img__5g1eI{filter:saturate(0) brightness(1.6)}.bot-message-module_rotating__YXqRr{animation:bot-message-module_rotate__6hhS9 1.5s linear infinite;filter:none}.bot-message-module_typing__lc6fY{bottom:12px;left:4px;position:absolute;width:40px}.bot-message-module_text__CNbNQ{color:#555;font-size:14px;font-style:italic;left:50px;position:absolute;top:12px;width:140px}@keyframes bot-message-module_rotate__6hhS9{0%{transform:rotate(0deg)}to{transform:rotate(1turn)}}.bot-message-module_icon__t9oXA{align-items:center;border:1px solid #d9d9d9;border-radius:50%;box-sizing:border-box;cursor:pointer;display:flex;flex-shrink:0;height:28px;justify-content:center;margin-top:7px;width:28px}.bot-message-module_msg__FkgHX{background-color:#f8f8f8;padding:0 10px;text-align:left}", styles$5 = { base: "bot-message-module_base__bWP8U", typing: "bot-message-module_typing__lc6fY", text: "bot-message-module_text__CNbNQ", msg: "bot-message-module_msg__FkgHX" }; styleInject(css_248z$5); var typingIco = `<svg width="50" height="40" viewBox="0 0 70 40" xmlns="http://www.w3.org/2000/svg" fill="#777">
    <!-- First dot -->
    <circle cx="10" cy="15" r="5">
        <animate attributeName="cy" values="15;5;15" dur="0.6s" repeatCount="indefinite" begin="0s" />
    </circle>

    <!-- Second dot -->
    <circle cx="30" cy="15" r="5">
        <animate attributeName="cy" values="15;5;15" dur="0.6s" repeatCount="indefinite" begin="0.2s" />
    </circle>

    <!-- Third dot -->
    <circle cx="50" cy="15" r="5">
        <animate attributeName="cy" values="15;5;15" dur="0.6s" repeatCount="indefinite" begin="0.4s" />
    </circle>
</svg>`, typingIcoSrc = "data:image/svg+xml;charset=utf-8," + encodeURIComponent(typingIco); function BotMessage(s) { var e = Base("div"); if (e.cssClass(styles$5.base), s) { var t = Message(s); t.cssClass(styles$5.msg), e.append(t) } else { var n = Img(typingIcoSrc); n.cssClass(styles$5.typing), e.append(n); var r = Base(); r.cssClass(styles$5.text), r.text("Sebastian is typing..."), e.append(r) } return __assign({}, e) } var css_248z$4 = ".user-message-module_base__VU5oa{background-color:#008539;clear:both;color:#fff;float:right;padding:0 10px;text-align:left}", styles$4 = { base: "user-message-module_base__VU5oa" }; styleInject(css_248z$4); function UserMessage(s) { var e = Message(s); return e.cssClass(styles$4.base), __assign({}, e) } function Messages() { var s = Base(); s.cssClass(styles$7.base), i(); var e, t; globalEmitter.on("user-message", u), globalEmitter.on("system-message", c), globalEmitter.on("bot-message", a), globalEmitter.on("reset-chatbox", o), globalEmitter.on("view-chaned", r), globalEmitter.on("append-unsent-message", l), globalEmitter.on("cancel-request", n); function n() { console.log("handleCancelReset"), t && t.el.remove() } function r(d, g) { d === VIEWS.CONVERSATIONS ? f() : (p(), i(g.id)) } function i(d) { return __awaiter(this, void 0, void 0, function () { var g, m, v, b; return __generator(this, function (x) { switch (x.label) { case 0: if (console.log("-in loadMessages", d), s.el.innerHTML = "", g = d || ((b = services.state.getCurrentSession()) === null || b === void 0 ? void 0 : b.talkjsConversationId), !g) return [2]; x.label = 1; case 1: return x.trys.push([1, 3, , 4]), [4, services.messages.fetchMessages(g)]; case 2: return m = x.sent(), m.length ? (globalEmitter.emit("hide-welcome"), m.forEach(function (k) { var _ = k.senderId === "sample_user_sebastian" ? BotMessage(k) : UserMessage(k); s.append(_) }), s.el.scrollTop = s.el.scrollHeight, [3, 4]) : [2]; case 3: return v = x.sent(), log.error(v), [3, 4]; case 4: return [2] } }) }) } function o() { s.el.innerHTML = "" } function a(d) { var g, m, v, b; if (log.info("on bot message", d), ![null, "unknown", "false"].includes((g = d.custom) === null || g === void 0 ? void 0 : g.engaigeConversationId)) { var x = JSON.parse(localStorage.getItem("talkjs-sessions") || "[]"), k = x.find(function (w) { var S; return w.engaigeConversationId === ((S = d.custom) === null || S === void 0 ? void 0 : S.engaigeConversationId) }); if (k) k.timestamp = new Date().getTime(), k.lastMessage = d.body, localStorage.setItem("talkjs-sessions", JSON.stringify(x)); else { var _ = x.find(function (w) { return !w.engaigeConversationId }); log.info("sessionWithoutEngaige", _), _ ? _.engaigeConversationId = (m = d.custom) === null || m === void 0 ? void 0 : m.engaigeConversationId : x.push({ engaigeConversationId: (v = d.custom) === null || v === void 0 ? void 0 : v.engaigeConversationId, timestamp: new Date().getTime(), lastMessage: d.body }), localStorage.setItem("talkjs-sessions", JSON.stringify(x)) } } if (!((b = d.custom) === null || b === void 0) && b.csid) { log.info("setting csid", d.custom.csid); var C = services.state.getCurrentSession(); services.state.setCurrentSession(__assign(__assign({}, C), { csid: d.custom.csid })) } clearTimeout(e), t && t.el.remove(); var y = BotMessage(d); s.append(y), s.el.scrollTop = s.el.scrollHeight } function c(d) { var g, m; ((g = d.custom) === null || g === void 0 ? void 0 : g.isHandover) === "true" && state.setCurrentSession(__assign(__assign({}, state.getCurrentSession()), { isHandover: !0 })), ((m = d.custom) === null || m === void 0 ? void 0 : m.isTyping) === "true" && (log.info("typing..."), t = BotMessage(), s.append(t), s.el.scrollTop = s.el.scrollHeight) } function l(d) { var g = UserMessage({ body: d }); setTimeout(function () { s.append(g) }, 80), s.el.scrollTop = s.el.scrollHeight } function u(d) { log.info("on user message", d, localStorage.getItem("is-handover")), localStorage.getItem("is-handover") !== "true" && (t = BotMessage(), s.el.scrollTop = s.el.scrollHeight, e = setTimeout(function () { s.append(t), s.el.scrollTop = s.el.scrollHeight }, 0)) } function p() { s.el.style.transform = "translateX(0px)", s.el.style.opacity = "1", s.el.style.pointerEvents = "auto" } function f() { s.el.style.transform = "translateX(100%)", s.el.style.opacity = "0", s.el.style.pointerEvents = "none" } function h() { s.el.style.transition = "none", s.el.style.transform = "translateY(15px) translateX(10px)", s.el.style.opacity = "0", setTimeout(function () { s.el.style.transition = "all 0.20s ease-in-out", s.el.style.transform = "translateY(0px) translateX(0px)", s.el.style.opacity = "1" }, 10) } return __assign(__assign({}, s), { show: p, hide: f, appear: h }) } var css_248z$3 = ".profile-module_base__5JmaD{background-color:#e4f3ea;border-radius:50%;height:175px;position:relative;width:175px}.profile-module_base__5JmaD,.profile-module_wrapper__LwYyd{align-items:center;display:flex;justify-content:center;overflow:hidden}.profile-module_wrapper__LwYyd{background-color:#008539;border:11px solid #b8ddc6;border-radius:50%;height:131px;width:131px}.profile-module_image__g-g0v{margin-top:10%;width:187px}.profile-module_name__J761W{background-color:#fff;border-radius:14px;bottom:18px;font-size:14px;font-weight:600;line-height:24px;padding:2px 15px;position:absolute;text-align:center}", styles$3 = { base: "profile-module_base__5JmaD", wrapper: "profile-module_wrapper__LwYyd", image: "profile-module_image__g-g0v", name: "profile-module_name__J761W" }; styleInject(css_248z$3); function Profile() { var s = Base(); s.cssClass(styles$3.base); var e = Base(); e.cssClass(styles$3.wrapper), s.append(e); var t = Img("https://cf-assets.helloprint.com/john.png"); t.cssClass(styles$3.image), e.append(t); var n = Base(); return n.text("Sebastian"), n.cssClass(styles$3.name), e.append(n), s } var css_248z$2 = ".welcome-module_base__9K3Da{align-items:center;display:flex;flex-direction:column;gap:4px;height:100%;justify-content:center;left:0;pointer-events:none;position:absolute;transition:all .16s ease-in-out;width:100%;z-index:999}.welcome-module_title__M2H3o{font-size:24px;font-weight:700;margin-top:38px}.welcome-module_subtitle__LW2Y3{color:#555;font-size:14px;font-weight:400;line-height:24px}.welcome-module_hide__-bQCg{opacity:0;transform:translateY(-216px) translateX(-163px) scale(.33)}.welcome-module_show__EEVYj{opacity:1;transform:translateY(0) translateX(0) scale(1)}", styles$2 = { base: "welcome-module_base__9K3Da", title: "welcome-module_title__M2H3o", subtitle: "welcome-module_subtitle__LW2Y3", hide: "welcome-module_hide__-bQCg", show: "welcome-module_show__EEVYj" }; styleInject(css_248z$2); function Welcome() { var s = Base(); s.cssClass(styles$2.base); var e = Profile(); s.append(e); var t = Base(); t.text("What can I help with?"), t.cssClass(styles$2.title), s.append(t); var n = Base(); n.text("Have a great day!"), n.cssClass(styles$2.subtitle), s.append(n), globalEmitter.on("user-message", o), globalEmitter.on("append-unsent-message", o), globalEmitter.on("bot-message", o), globalEmitter.on("hide-welcome", o), globalEmitter.on("show-welcome", i), globalEmitter.on("chat-open", r), globalEmitter.on("reset-chatbox", i); function r() { s.el.style.transform = "translateY(-12px) translateX(-8px)", setTimeout(function () { return s.el.style.transform = "translateY(0px) translateX(0px)" }, 100) } function i() { s.el.classList.remove(styles$2.hide), s.cssClass(styles$2.show) } function o() { s.el.classList.remove(styles$2.show), s.cssClass(styles$2.hide) } return s } var expIco = `<svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
<g id="expand_content">
<mask id="mask0_2698_17746" style="mask-type:alpha" maskUnits="userSpaceOnUse" x="0" y="0" width="24" height="24">
<rect id="Bounding box" width="24" height="24" fill="#555555"/>
</mask>
<g mask="url(#mask0_2698_17746)">
<path id="expand_content_2" d="M7 17H10C10.2833 17 10.5208 17.0958 10.7125 17.2875C10.9042 17.4792 11 17.7167 11 18C11 18.2833 10.9042 18.5208 10.7125 18.7125C10.5208 18.9042 10.2833 19 10 19H6C5.71667 19 5.47917 18.9042 5.2875 18.7125C5.09583 18.5208 5 18.2833 5 18V14C5 13.7167 5.09583 13.4792 5.2875 13.2875C5.47917 13.0958 5.71667 13 6 13C6.28333 13 6.52083 13.0958 6.7125 13.2875C6.90417 13.4792 7 13.7167 7 14V17ZM17 7H14C13.7167 7 13.4792 6.90417 13.2875 6.7125C13.0958 6.52083 13 6.28333 13 6C13 5.71667 13.0958 5.47917 13.2875 5.2875C13.4792 5.09583 13.7167 5 14 5H18C18.2833 5 18.5208 5.09583 18.7125 5.2875C18.9042 5.47917 19 5.71667 19 6V10C19 10.2833 18.9042 10.5208 18.7125 10.7125C18.5208 10.9042 18.2833 11 18 11C17.7167 11 17.4792 10.9042 17.2875 10.7125C17.0958 10.5208 17 10.2833 17 10V7Z" fill="#555555"/>
</g>
</g>
</svg>`, contractIco = `<svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
    <g id="collapse_content">
        <mask id="mask0_3161_32225" style="mask-type:alpha" maskUnits="userSpaceOnUse" x="0" y="0" width="24"
            height="24">
            <rect id="Bounding box" width="24" height="24" fill="#D9D9D9" />
        </mask>
        <g mask="url(#mask0_3161_32225)">
            <path id="collapse_content_2"
                d="M9.5 14.5H6.25C6.0375 14.5 5.85942 14.4281 5.71575 14.2843C5.57192 14.1404 5.5 13.9622 5.5 13.7498C5.5 13.5371 5.57192 13.359 5.71575 13.2155C5.85942 13.0718 6.0375 13 6.25 13H10.0963C10.3523 13 10.5669 13.0866 10.7402 13.2598C10.9134 13.4331 11 13.6478 11 13.9038V17.75C11 17.9625 10.9281 18.1406 10.7842 18.2843C10.6404 18.4281 10.4622 18.5 10.2497 18.5C10.0371 18.5 9.859 18.4281 9.7155 18.2843C9.57183 18.1406 9.5 17.9625 9.5 17.75V14.5ZM14.5 9.5H17.75C17.9625 9.5 18.1406 9.57192 18.2843 9.71575C18.4281 9.85958 18.5 10.0378 18.5 10.2503C18.5 10.4629 18.4281 10.641 18.2843 10.7845C18.1406 10.9282 17.9625 11 17.75 11H13.9038C13.6478 11 13.4331 10.9134 13.2598 10.7402C13.0866 10.5669 13 10.3522 13 10.0962V6.25C13 6.0375 13.0719 5.85942 13.2158 5.71575C13.3596 5.57192 13.5378 5.5 13.7503 5.5C13.9629 5.5 14.141 5.57192 14.2845 5.71575C14.4282 5.85942 14.5 6.0375 14.5 6.25V9.5Z"
                fill="#1C1B1F" />
        </g>
    </g>
</svg>`, expIcoSrc = "data:image/svg+xml;charset=utf-8," + encodeURIComponent(expIco), contractIcoSrc = "data:image/svg+xml;charset=utf-8," + encodeURIComponent(contractIco); function Box() { var s = Base(); s.cssClass(styles$c.base), window.innerWidth > 320 && (s.el.style.width = Math.min(window.innerWidth - 40, 400) + "px", s.el.style.height = "532px"); var e = Base(); e.cssClass(styles$c.x), e.text("\u2715"), e.el.onclick = function () { return s.emit("close") }, s.append(e); var t = Img(expIcoSrc); t.cssClass(styles$c.expand), t.el.onclick = f, s.append(t); var n = Img(contractIcoSrc); n.cssClass(styles$c.expand), n.el.style.display = "none", n.el.onclick = h, s.append(n); var r = Header(); s.append(r); var i = Welcome(); s.append(i); var o = Messages(); s.append(o); var a = Conversaitons(); s.append(a); var c = Input(); s.append(c); function l() { p(), setTimeout(o.appear, 120), setTimeout(c.show, 160), globalEmitter.emit("chat-open") } function u() { s.el.style.transform = "scale(0) translateY(0px) translateX(0px)", o.hide(), c.hide() } function p() { s.el.style.transform = "scale(1) translateY(-2px) translateX(-2px)", setTimeout(function () { s.el.style.transform = "scale(1) translateY(0px) translateX(0px)" }, 160) } function f() { s.el.style.width = Math.min(window.innerWidth - 40, 660) + "px", s.el.style.height = Math.max(window.innerHeight - 60, 532) + "px", t.el.style.display = "none", n.el.style.display = "block" } function h() { s.el.style.width = Math.min(window.innerWidth - 40, 400) + "px", s.el.style.height = "532px", t.el.style.display = "block", n.el.style.display = "none" } return __assign(__assign({}, s), { show: l, hide: u, focus: c.focus }) } var css_248z$1 = ".start-module_base__lAITj{align-items:center;background-color:#fff;border-radius:50%;bottom:20px;box-shadow:0 2px 5px rgba(0,0,0,.1);cursor:pointer;display:flex;flex-direction:column;height:60px;justify-content:center;opacity:1;position:fixed;right:20px;transform:scale(1);transform-origin:bottom right;transition:transform .16s ease-in-out;width:60px;will-change:transform opacity;z-index:1000}.start-module_base__lAITj:hover{opacity:.9}.start-module_base__lAITj:active{opacity:.8}.start-module_icon__b1N8Z{height:40px;width:40px}.start-module_unread__--gfQ{align-items:center;background-color:#ff4d4f;border-radius:50%;color:#fff;display:flex;height:30px;justify-content:center;position:absolute;right:-5px;top:-5px;width:30px;z-index:1001}", styles$1 = { base: "start-module_base__lAITj", icon: "start-module_icon__b1N8Z", unread: "start-module_unread__--gfQ" }; styleInject(css_248z$1); var messageIco = `<?xml version="1.0" encoding="utf-8"?><!-- Uploaded to: SVG Repo, www.svgrepo.com, Generator: SVG Repo Mixer Tools -->\r
<svg width="800px" height="800px" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">\r
<path d="M16 10H16.01M12 10H12.01M8 10H8.01M3 10C3 4.64706 5.11765 3 12 3C18.8824 3 21 4.64706 21 10C21 15.3529 18.8824 17 12 17C11.6592 17 11.3301 16.996 11.0124 16.9876L7 21V16.4939C4.0328 15.6692 3 13.7383 3 10Z" stroke="#000000" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/>\r
</svg>`, messageIcoSrc = "data:image/svg+xml;charset=utf-8," + encodeURIComponent(messageIco); function Start() { var s = Base(); s.cssClass(styles$1.base), s.el.addEventListener("click", function () { return s.emit("click") }); var e = Img(messageIcoSrc); e.cssClass(styles$1.icon), s.append(e); function t() { s.el.style.transform = "scale(1) translateY(0px) translateX(0px)" } function n() { s.el.style.transform = "scale(0) translateY(-10px) translateX(-10px)", r.el.style.display = "none" } var r = Base(); return r.cssClass(styles$1.unread), globalEmitter.on("unread-messages", function (i) { log.info("listen", i), r.el.style.display = "flex", s.append(r), r.text(i.toString()) }), __assign(__assign({}, s), { show: t, hide: n }) } var css_248z = ".app-module_base__sLlvD{text-align:center}ol,ul{margin:0 20px}ol,p,ul{padding:10px}p{margin:0}", styles = { base: "app-module_base__sLlvD" }; styleInject(css_248z); function App() { var s = Base(); s.cssClass(styles.base); var e = Start(); s.append(e), e.on("click", i); var t = Box(); s.append(t), t.on("close", o); var n = window.innerWidth <= 768, r; n || (r = setTimeout(i, 3e3)); function i() { r && clearTimeout(r), t.show(), e.hide(), setTimeout(t.focus, 400), services.messages.markRead(), services.notifications.enable() } function o() { t.hide(), e.show() } return s } (function () { return __awaiter(this, void 0, void 0, function () { var s = this; return __generator(this, function (e) { return document.addEventListener("DOMContentLoaded", function () { return __awaiter(s, void 0, void 0, function () { var t; return __generator(this, function (n) { switch (n.label) { case 0: return console.log("---- DOMContentLoaded"), handleMigrationLegacyCode(), [4, initializeTalkjs()]; case 1: return n.sent(), t = App(), document.body.appendChild(t.el), console.log("----chat", t.el), [2] } }) }) }), [2] }) }) })(); function handleMigrationLegacyCode() { var s = localStorage.getItem("talkjs-sessions"); if (!s) { localStorage.setItem("talkjs-sessions", JSON.stringify([])); var e = [], t = localStorage.getItem("talkjs-conversation-id"); t && (e.push({ talkjsConversationId: t }), localStorage.removeItem("talkjs-conversation-id")); var n = localStorage.getItem("engaige-conversation-id"); n && (e.push({ engaigeConversationId: n }), localStorage.removeItem("engaige-conversation-id")), localStorage.setItem("talkjs-sessions", JSON.stringify(e)) } }
